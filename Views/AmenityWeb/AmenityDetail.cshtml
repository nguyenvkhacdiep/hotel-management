@using HotelManagement.Models.Common
@model HotelManagement.Services.Dto.AmenityResponseModel
@{
    ViewData["Title"] = "Amenity Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="mb-1">
                        <i class="fas fa-star text-warning"></i> Amenity Details
                    </h2>
                    <p class="text-muted mb-0">View and manage amenity information</p>
                </div>
                <a asp-action="ListAmenity" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Back to List
                </a>
            </div>

            <!-- Alert Messages -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show shadow-sm" role="alert">
                    <i class="fas fa-check-circle me-2"></i>
                    <strong>Success!</strong> @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show shadow-sm" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <strong>Error!</strong> @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ValidationErrors"] != null)
            {
                var errors = System.Text.Json.JsonSerializer.Deserialize<List<string>>(TempData["ValidationErrors"].ToString());
                <div class="alert alert-danger alert-dismissible fade show shadow-sm">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Validation Errors:</strong>
                    <ul class="mb-0 mt-2">
                        @foreach (var error in errors)
                        {
                            <li>@error</li>
                        }
                    </ul>
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <div class="row">
                <div class="col-lg-4 mb-4">
                    <div class="card shadow-sm border-0 text-center">
                        <div class="card-body py-5">
                            <div class="amenity-icon-large mb-4">
                                @if (!string.IsNullOrEmpty(Model.AmenityIcon))
                                {
                                    <i class="fas @Model.AmenityIcon fa-5x text-primary"></i>
                                }
                                else
                                {
                                    <i class="fas fa-star fa-5x text-primary"></i>
                                }
                            </div>
                            <h4 class="mb-3">@Model.AmenityName</h4>
                            <span class="badge bg-@(GetCategoryBadgeColor(Model.Category)) fs-6 mb-3">
                                @GetCategoryDisplay(Model.Category)
                            </span>
                            
                            <div class="d-grid gap-2 mt-4">
                                <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#editModal">
                                    <i class="fas fa-edit"></i> Edit Amenity
                                </button>
                                
                                <button type="button" class="btn btn-outline-@(Model.IsActive ? "success" : "warning")" data-bs-toggle="modal" data-bs-target="#toggleStatusModal">
                                    <i class="fas fa-@(Model.IsActive ? "check" : "ban")"></i>
                                    @(Model.IsActive ? "Activate" : "Deactivate")
                                </button>
                                
                                <button type="button" class="btn btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteModal">
                                    <i class="fas fa-trash"></i>
                                    Delete
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Statistics Card -->
                    <div class="card shadow-sm border-0 mt-3">
                        <div class="card-header bg-light">
                            <h6 class="mb-0">
                                <i class="fas fa-chart-line"></i> Information
                            </h6>
                        </div>
                        <div class="card-body">
                            <div class="d-flex justify-content-between mb-3 pb-3 border-bottom">
                                <span class="text-muted">Amenity ID:</span>
                                <strong>#@Model.Id</strong>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="col-lg-8">
                    <div class="card shadow-sm border-0">
                        <div class="card-header bg-light">
                            <h5 class="mb-0">
                                <i class="fas fa-info-circle"></i> Amenity Details
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <label class="text-muted small mb-1">
                                        <i class="fas fa-tag"></i> Amenity Name
                                    </label>
                                    <div class="fw-bold fs-5">@Model.AmenityName</div>
                                </div>
                                <div class="col-md-6 mb-4">
                                    <label class="text-muted small mb-1">
                                        <i class="fas fa-icons"></i> Icon
                                    </label>
                                    <div class="d-flex align-items-center">
                                        @if (!string.IsNullOrEmpty(Model.AmenityIcon))
                                        {
                                            <i class="fas @Model.AmenityIcon fa-2x text-primary me-3"></i>
                                            
                                        }
                                        else
                                        {
                                            <span class="text-muted">No icon set</span>
                                        }
                                    </div>
                                </div>
                                <div class="col-12">
                                    <label class="text-muted small mb-1">
                                        <i class="fas fa-align-left"></i> Description
                                    </label>
                                    <div class="card bg-light border-0">
                                        <div class="card-body">
                                            @if (!string.IsNullOrEmpty(Model.Description))
                                            {
                                                <p class="mb-0">@Model.Description</p>
                                            }
                                            else
                                            {
                                                <p class="text-muted mb-0"><em>No description provided</em></p>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row mt-3">
                        <div class="col-md-6">
                            <div class="card shadow-sm border-0 border-start border-primary border-4 h-100">
                                <div class="card-body">
                                    <h6 class="text-primary mb-3">
                                        <i class="fas fa-bed"></i> Room Usage
                                    </h6>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <h3 class="mb-0">0</h3>
                                            <small class="text-muted">Rooms using this amenity</small>
                                        </div>
                                        <i class="fas fa-door-open fa-3x text-primary opacity-25"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card shadow-sm border-0 border-start border-success border-4 h-100">
                                <div class="card-body">
                                    <h6 class="text-success mb-3">
                                        <i class="fas fa-chart-bar"></i> Popularity
                                    </h6>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <h3 class="mb-0">-</h3>
                                            <small class="text-muted">Usage ranking</small>
                                        </div>
                                        <i class="fas fa-star fa-3x text-success opacity-25"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Amenity Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <form asp-action="UpdateAmenity" asp-route-id="@Model.Id" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="editModalLabel">
                        <i class="fas fa-edit"></i> Edit Amenity
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Amenity Name <span class="text-danger">*</span></label>
                            <input type="text" name="AmenityName" class="form-control" value="@Model.AmenityName" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Category <span class="text-danger">*</span></label>
                            <select name="Category" class="form-select" required>
                                <option value="0" selected="@(Model.Category == AmenityCategory.Technology)">Technology</option>
                                <option value="1" selected="@(Model.Category == AmenityCategory.Comfort)">Comfort</option>
                                <option value="2" selected="@(Model.Category == AmenityCategory.View)">View</option>
                                <option value="3" selected="@(Model.Category == AmenityCategory.Service)">Service</option>
                                <option value="4" selected="@(Model.Category == AmenityCategory.Entertainment)">Entertainment</option>
                                <option value="5" selected="@(Model.Category == AmenityCategory.Others)">Others</option>
                            </select>
                        </div>
                        <div class="col-12 mb-3">
                            <label class="form-label">Icon</label>
                            <input type="text" name="AmenityIcon" class="form-control" value="@Model.AmenityIcon" placeholder="e.g., fa-wifi">
                            <small class="text-muted">FontAwesome icon class</small>
                        </div>
                        <div class="col-12 mb-3">
                            <label class="form-label">Description</label>
                            <textarea name="Description" class="form-control" rows="4">@Model.Description</textarea>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times"></i> Cancel
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Save Changes
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="toggleStatusModal" tabindex="-1" aria-labelledby="toggleStatusModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-secondary text-white border-0">
                <h5 class="modal-title" id="toggleStatusModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i> Confirm
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
               
                <p class="text-center mb-2">Are you sure you want to @(Model.IsActive? "deactivate" : "active") this amenity?</p>
                <div class="alert alert-warning mb-0">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <small><strong>Warning:</strong> This action cannot be undone!</small>
                </div>
            </div>
            <div class="modal-footer border-0 bg-light">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cancel
                </button>
                <form asp-action="ToggleAmenityStatus" asp-route-id="@Model.Id" asp-route-returnTo="detail" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-primary">
                        @(Model.IsActive? "Deactivate" : "Active")
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-danger text-white border-0">
                <h5 class="modal-title" id="deleteLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i> Confirm
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
               
                <p class="text-center mb-2">Are you sure you want to delete this amenity?</p>
                <div class="alert alert-warning mb-0">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <small><strong>Warning:</strong> This action cannot be undone!</small>
                </div>
            </div>
            <div class="modal-footer border-0 bg-light">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cancel
                </button>
                <form asp-action="DeleteAmenity" asp-route-id="@Model.Id" asp-route-returnTo="detail" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                       Delete
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>


@functions {
    string GetCategoryBadgeColor(AmenityCategory? category)
    {
        return category switch
        {
            AmenityCategory.Comfort => "primary",
            AmenityCategory.Technology => "info",
            AmenityCategory.Entertainment => "warning",
            AmenityCategory.View => "success",
            AmenityCategory.Service => "danger",
            AmenityCategory.Others => "dark",
            _ => "secondary"
        };
    }

    string GetCategoryDisplay(AmenityCategory? category)
    {
        return category switch
        {
            AmenityCategory.Technology => "Technology",
            AmenityCategory.Comfort => "Comfort",
            AmenityCategory.Entertainment => "Entertainment",
            AmenityCategory.View => "View",
            AmenityCategory.Service => "Service",
            _ => "Others"
        };
    }
}


<style>
    .amenity-icon-large {
        animation: float 3s ease-in-out infinite;
    }

    @@keyframes float {
        0%, 100% { transform: translateY(0); }
        50% { transform: translateY(-10px); }
    }
    
    .card {
        transition: transform 0.2s, box-shadow 0.2s;
    }

    .card:hover {
        transform: translateY(-2px);
    }
    
    .border-4 {
        border-width: 4px !important;
    }
    
    .badge {
        font-weight: 500;
        padding: 0.5rem 1rem;
    }
</style>


@section Scripts {
<script>
    setTimeout(function() {
        const alerts = document.querySelectorAll('.alert');
        alerts.forEach(alert => {
            const bsAlert = new bootstrap.Alert(alert);
            bsAlert.close();
        });
    }, 5000);
    
    document.querySelectorAll('form').forEach(form => {
        form.addEventListener('submit', function() {
            const submitBtn = this.querySelector('button[type="submit"]');
            if (submitBtn) {
                submitBtn.disabled = true;
                const originalText = submitBtn.innerHTML;
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';
            }
        });
    });
</script>
}