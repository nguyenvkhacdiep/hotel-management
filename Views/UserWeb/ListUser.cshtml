@model HotelManagement.Services.Common.PageList<HotelManagement.Services.Dto.UserResponseModel>

@{
    ViewData["Title"] = "User Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <!-- Header Section -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="mb-1">
                        <i class="fas fa-users text-primary"></i> User Management
                    </h2>
                    <p class="text-muted mb-0">Manage and monitor all system users</p>
                </div>
                <div class="d-flex gap-2">
                    <button class="btn btn-outline-secondary" onclick="window.location.reload()">
                        <i class="fas fa-sync-alt"></i> Refresh
                    </button>
                    <a asp-action="AddUser" class="btn btn-primary">
                        <i class="fas fa-user-plus"></i> Add New User
                    </a>
                </div>
            </div>

            <!-- Alert Messages -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show shadow-sm" role="alert">
                    <i class="fas fa-check-circle me-2"></i>
                    <strong>Success!</strong> @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show shadow-sm" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <strong>Error!</strong> @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <!-- Statistics Cards -->
            <div class="row mb-4">
                <div class="col-md-3 mb-3">
                    <div class="card stats-card border-0 shadow-sm bg-primary text-white">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="text-white-50 mb-1">Total Users</h6>
                                    <h3 class="mb-0">@(Model.Data?.Count ?? 0)</h3>
                                </div>
                                <div class="stats-icon">
                                    <i class="fas fa-users fa-2x opacity-50"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="card stats-card border-0 shadow-sm bg-success text-white">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="text-white-50 mb-1">Active Users</h6>
                                    <h3 class="mb-0">@(Model.Data?.Count(u => u.IsActive) ?? 0)</h3>
                                </div>
                                <div class="stats-icon">
                                    <i class="fas fa-user-check fa-2x opacity-50"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="card stats-card border-0 shadow-sm bg-warning text-white">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="text-white-50 mb-1">Inactive Users</h6>
                                    <h3 class="mb-0">@(Model.Data?.Count(u => !u.IsActive) ?? 0)</h3>
                                </div>
                                <div class="stats-icon">
                                    <i class="fas fa-user-times fa-2x opacity-50"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="card stats-card border-0 shadow-sm bg-info text-white">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="text-white-50 mb-1">Admins</h6>
                                    <h3 class="mb-0">@(Model.Data?.Count(u => u.Role.Name == "Admin") ?? 0)</h3>
                                </div>
                                <div class="stats-icon">
                                    <i class="fas fa-user-shield fa-2x opacity-50"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Users Table Card -->
            <div class="card shadow-sm border-0">
                <div class="card-header bg-white border-bottom">
                    <div class="row align-items-center">
                        <div class="col">
                            <h5 class="mb-0">
                                <i class="fas fa-list"></i> Users List
                            </h5>
                        </div>
                        <div class="col-auto">
                            <div class="input-group input-group-sm">
                                <span class="input-group-text bg-light border-0">
                                    <i class="fas fa-search"></i>
                                </span>
                                <input type="text" 
                                       id="searchInput" 
                                       class="form-control border-0 bg-light" 
                                       placeholder="Search users...">
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card-body p-0">
                    @if (Model.Data != null && Model.Data.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover align-middle mb-0" id="usersTable">
                                <thead class="table-light">
                                    <tr>
                                        <th style="width: 5%" class="text-center">#</th>
                                        <th style="width: 25%">User</th>
                                        <th style="width: 15%" class="text-center">Role</th>
                                        <th style="width: 15%" class="text-center">Status</th>
                                        <th style="width: 15%">Created At</th>
                                        <th style="width: 25%" class="text-center">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.Data.Count; i++)
                                    {
                                        var user = Model.Data[i];
                                        <tr class="user-row" data-user-id="@user.Id">
                                            <td class="text-center">
                                                <span class="badge bg-light text-dark">@(i + 1)</span>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="user-avatar me-3 bg-primary text-white rounded-circle d-flex align-items-center justify-content-center"
                                                         style="width: 20px; height: 20px; font-size: 16px;">
                                                        <i class="fas fa-user"></i>
                                                    </div>
                                                    <div>
                                                        <div class="fw-bold text-dark">@user.Username</div>
                                                       
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="text-center">
                                                <span class="badge rounded-pill bg-@(user.Role.Name == "Admin" ? "danger" : user.Role.Name == "Manager" ? "warning" : "info") px-3 py-2">
                                                    <i class="fas fa-@(user.Role.Name == "Admin" ? "crown" : user.Role.Name == "Manager" ? "briefcase" : "user")"></i>
                                                    @user.Role.Name
                                                </span>
                                            </td>
                                            <td class="text-center">
                                                <span class="badge rounded-pill bg-@(user.IsActive ? "success" : "secondary") px-3 py-2">
                                                    <i class="fas fa-circle fa-xs"></i>
                                                    @(user.IsActive ? "Active" : "Inactive")
                                                </span>
                                            </td>
                                            <td>
                                                <div>
                                                    <small class="text-muted d-block">
                                                        <i class="far fa-calendar"></i> @user.CreatedAt.ToString("MMM dd, yyyy")
                                                    </small>
                                                    <small class="text-muted">
                                                        <i class="far fa-clock"></i> @user.CreatedAt.ToString("hh:mm tt")
                                                    </small>
                                                </div>
                                            </td>
                                            <td class="text-center">
                                                <div class="btn-group" role="group">
                                                    <a asp-action="UserDetail" 
                                                       asp-route-id="@user.Id" 
                                                       class="btn btn-sm btn-outline-info"
                                                       title="View Details"
                                                       data-bs-toggle="tooltip">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <button type="button" 
                                                            class="btn btn-sm btn-outline-danger"
                                                            onclick="confirmDelete('@user.Id', '@user.Username')"
                                                            title="Delete User"
                                                            data-bs-toggle="tooltip">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-users fa-4x text-muted mb-3"></i>
                            <h5 class="text-muted">No Users Found</h5>
                            <p class="text-muted">Get started by adding your first user</p>
                            <a asp-action="AddUser" class="btn btn-primary">
                                <i class="fas fa-user-plus"></i> Add First User
                            </a>
                        </div>
                    }
                </div>

                @if (Model.Data != null && Model.Data.Any())
                {
                    <div class="card-footer bg-white border-top">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="text-muted small">
                                Showing @Model.Data.Count users
                            </div>
                            <div>
                                <!-- Pagination sẽ được thêm ở đây nếu cần -->
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-danger text-white border-0">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i> Confirm Delete
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <div class="text-center mb-3">
                    <i class="fas fa-user-times fa-4x text-danger mb-3"></i>
                </div>
                <p class="text-center mb-2">Are you sure you want to delete user</p>
                <p class="text-center mb-3">
                    <strong class="fs-5" id="deleteUsername"></strong>?
                </p>
                <div class="alert alert-warning mb-0">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <small><strong>Warning:</strong> This action cannot be undone!</small>
                </div>
            </div>
            <div class="modal-footer border-0 bg-light">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cancel
                </button>
                <form id="deleteForm" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash"></i> Delete User
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>


<style>
    .stats-card {
        transition: transform 0.2s, box-shadow 0.2s;
        cursor: pointer;
    }

    .stats-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 20px rgba(0,0,0,0.15) !important;
    }

    .stats-icon {
        font-size: 2rem;
    }
    
    .table-hover tbody tr {
        transition: all 0.2s;
    }

    .table-hover tbody tr:hover {
        background-color: #f8f9fa;
        transform: scale(1.01);
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    }

    .user-avatar {
        transition: transform 0.2s;
    }

    .user-row:hover .user-avatar {
        transform: scale(1.1);
    }
    
    .btn-group .btn {
        margin: 0 2px;
        transition: all 0.2s;
    }

    .btn-group .btn:hover {
        transform: translateY(-2px);
    }
    
    .badge {
        font-weight: 500;
        letter-spacing: 0.3px;
    }
    
    #searchInput:focus {
        box-shadow: none;
        border-color: #dee2e6;
    }
    
    .card-header {
        padding: 1.25rem 1.5rem;
    }
    
    .alert {
        animation: slideDown 0.3s ease-out;
    }

    @@keyframes slideDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    .modal-content {
        border-radius: 15px;
        overflow: hidden;
    }
    
    @@media (max-width: 768px) {
        .stats-card {
            margin-bottom: 1rem;
        }

        .btn-group {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        .btn-group .btn {
            width: 100%;
        }
    }
</style>


@section Scripts {
<script>
    document.addEventListener('DOMContentLoaded', function() {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    });
    
    function confirmDelete(userId, username) {
        document.getElementById('deleteUsername').textContent = username;
        document.getElementById('deleteForm').action = '/user/delete/' + userId;
        
        var modal = new bootstrap.Modal(document.getElementById('deleteModal'));
        modal.show();
    }
    
    document.getElementById('searchInput').addEventListener('keyup', function() {
        const searchValue = this.value.toLowerCase();
        const rows = document.querySelectorAll('#usersTable tbody tr');
        
        rows.forEach(row => {
            const username = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
            const role = row.querySelector('td:nth-child(3)').textContent.toLowerCase();
            const status = row.querySelector('td:nth-child(4)').textContent.toLowerCase();
            
            if (username.includes(searchValue) || role.includes(searchValue) || status.includes(searchValue)) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    });
    
    setTimeout(function() {
        const alerts = document.querySelectorAll('.alert');
        alerts.forEach(alert => {
            const bsAlert = new bootstrap.Alert(alert);
            bsAlert.close();
        });
    }, 5000);
    
    document.querySelectorAll('.user-row').forEach(row => {
        row.addEventListener('click', function(e) {
            if (!e.target.closest('.btn-group')) {
                const userId = this.getAttribute('data-user-id');
                window.location.href = '/user/detail/' + userId;
            }
        });
    });
    
    document.querySelectorAll('form[method="post"]').forEach(form => {
        form.addEventListener('submit', function() {
            const submitBtn = this.querySelector('button[type="submit"]');
            if (submitBtn) {
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';
            }
        });
    });
</script>
}