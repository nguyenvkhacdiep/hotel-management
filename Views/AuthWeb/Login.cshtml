@model HotelManagement.Services.Dto.UserLoginDto

@{
    ViewData["Title"] = "Login";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Hotel Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        /* giữ nguyên CSS từ trước */
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        .login-container { max-width: 450px; width: 100%; padding: 20px; }
        .login-card { background: white; border-radius: 20px; box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2); overflow: hidden; }
        .login-header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 40px 30px; text-align: center; color: white; }
        .login-header h2 { margin: 0; font-size: 28px; font-weight: 600; }
        .login-header p { margin: 10px 0 0; opacity: 0.9; font-size: 14px; }
        .login-body { padding: 40px 30px; }
        .form-label { font-weight: 600; color: #333; margin-bottom: 8px; }
        .form-control { border: 2px solid #e0e0e0; border-radius: 10px; padding: 12px 15px; font-size: 14px; transition: all 0.3s ease; }
        .form-control:focus { border-color: #667eea; box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25); }
        .input-group-text { background: white; border: 2px solid #e0e0e0; border-right: none; border-radius: 10px 0 0 10px; }
        .input-group .form-control { border-left: none; border-radius: 0 10px 10px 0; }
        .input-group:focus-within .input-group-text { border-color: #667eea; }
        .btn-login { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border: none; border-radius: 10px; padding: 12px; font-size: 16px; font-weight: 600; color: white; width: 100%; transition: transform 0.2s ease; }
        .btn-login:hover { transform: translateY(-2px); box-shadow: 0 5px 20px rgba(102, 126, 234, 0.4); }
        .alert { border-radius: 10px; border: none; }
        .form-check-input:checked { background-color: #667eea; border-color: #667eea; }
        .forgot-password { color: #667eea; text-decoration: none; font-size: 14px; }
        .forgot-password:hover { text-decoration: underline; }
        .icon-circle { width: 80px; height: 80px; background: rgba(255, 255, 255, 0.2); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin: 0 auto 20px; }
        .icon-circle i { font-size: 40px; }
        .error-text { color: red; font-size: 12px; margin-top: 5px; display: block; }
    </style>
</head>
<body>
    <div class="login-container">
        <div class="login-card">
            <div class="login-header">
                <div class="icon-circle">
                    <i class="fas fa-hotel"></i>
                </div>
                <h2>Hotel Management</h2>
                <p>Login to continue</p>
            </div>

            <div class="login-body">
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                @if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="fas fa-exclamation-circle me-2"></i>@TempData["Error"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                <form asp-action="Login" method="post" novalidate>
                    @Html.AntiForgeryToken()

                    <div class="mb-3">
                        <label asp-for="Username" class="form-label">
                            <i class="fas fa-user me-2"></i>Username
                        </label>
                        <input asp-for="Username" class="form-control" placeholder="Enter username" required />
                        <span id="username-error" class="error-text"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Password" class="form-label">
                            <i class="fas fa-lock me-2"></i>Password
                        </label>
                        <input asp-for="Password" type="password" class="form-control" placeholder="Enter password" required />
                        <span id="password-error" class="error-text"></span>
                    </div>

                    <div class="mb-3 d-flex justify-content-between align-items-center">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="rememberMe">
                            <label class="form-check-label" for="rememberMe">
                                Remember me
                            </label>
                        </div>
                        <a href="#" class="forgot-password">Forgot password?</a>
                    </div>

                    <button type="submit" class="btn btn-login">
                        <i class="fas fa-sign-in-alt me-2"></i>Login
                    </button>
                </form>
            </div>
        </div>

        <div class="text-center mt-3">
            <p class="text-white mb-0">
                <small>&copy; 2025 Hotel Management System. All rights reserved.</small>
            </p>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');
            const usernameInput = document.querySelector('input[name="Username"]');
            const passwordInput = document.querySelector('input[name="Password"]');
            const usernameError = document.getElementById('username-error');
            const passwordError = document.getElementById('password-error');

            usernameInput.addEventListener('input', function() {
                usernameError.textContent = '';
                usernameInput.classList.remove('is-invalid');
            });

            passwordInput.addEventListener('input', function() {
                passwordError.textContent = '';
                passwordInput.classList.remove('is-invalid');
            });

            form.addEventListener('submit', function(e) {
                e.preventDefault();

                usernameError.textContent = '';
                passwordError.textContent = '';
                usernameInput.classList.remove('is-invalid');
                passwordInput.classList.remove('is-invalid');

                let hasError = false;

                if (!usernameInput.value.trim()) {
                    usernameError.textContent = 'Please enter username';
                    usernameInput.classList.add('is-invalid');
                    hasError = true;
                }

                if (!passwordInput.value.trim()) {
                    passwordError.textContent = 'Please enter password';
                    passwordInput.classList.add('is-invalid');
                    hasError = true;
                }

                if (!hasError) {
                    form.submit();
                }
            });
        });
    </script>
</body>
</html>
