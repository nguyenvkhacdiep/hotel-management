@using HotelManagement.Models.Common
@model HotelManagement.Services.Common.PageList<HotelManagement.Services.Dto.FloorResponseModel>

@{
    var queryParams = ViewBag.QueryParams as QueryParameters ?? QueryParameters.FromRequest(Context.Request);
}

@{
    ViewData["Title"] = "Floor Management";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-md-6">
            <h2>
                <i class="bi bi-building"></i> Floor Management
            </h2>
            <p class="text-muted">Manage all floors and their information</p>
        </div>
        <div class="col-md-6 text-end">
            <a asp-action="AddFloor" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> Add New Floor
            </a>
        </div>
    </div>

    <!-- Alerts -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Filter & Search Card -->
    <div class="card mb-4">
        <div class="card-body">
           <form method="get" id="filterForm">
            <div>
                <div class="d-flex gap-3">
                    <div class="g-3">
                        <input type="text" name="searchKey" class="form-control" 
                               placeholder="@ViewData["SearchPlaceholder"]" value="@ViewBag.SearchKey" />
                    </div>
                    
                    <div>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-search"></i> Search
                        </button>
                        <a href="@Url.Action(ViewContext.RouteData.Values["ListFloor"]?.ToString())" 
                           class="btn btn-outline-secondary">
                            <i class="bi bi-x-circle"></i> Clear
                        </a>
                    </div>
                </div>
                
               
            </div>

        </form>
        </div>
    </div>

    <!-- Data Table Card -->
    <div class="card">
        <div class="card-header bg-light">
            <div class="row align-items-center">
                <div class="col">
                    <h5 class="mb-0">Floor List</h5>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="d-flex align-items-center">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <page-size-selector current-page-size="@queryParams.PageSize"></page-size-selector>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 text-end">
                    <span class="text-muted">
                        Showing @(Model != null && Model.Data.Any() ? (Model.PageIndex - 1) * Model.PageSize + 1 : 0) 
                        to @(Model != null ? Math.Min(Model.PageIndex * Model.PageSize, Model.TotalItems) : 0) 
                        of @(Model?.TotalItems ?? 0) entries
                    </span>
                </div>
            </div>

            <!-- Table -->
            <div class="table-responsive">
                <table class="table table-striped table-hover align-middle" id="floorTable">
                    <thead class="table-dark">
                        <tr>
                            <th style="width: 60px;">#</th>
                            <th>Floor Name</th>
                            <th>Floor Number</th>
                            <th>Total Rooms</th>
                            <th>Description</th>
                            <th style="width: 120px;">Status</th>
                            <th>Created At</th>
                            <th style="width: 200px;">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Data.Any())
                        {
                            var index = (Model.PageIndex - 1) * Model.PageSize;
                            @foreach (var floor in Model.Data)
                            {
                                index++;
                                <tr>
                                    <td>@index</td>
                                    <td>
                                        <strong>@(floor.FloorName ?? "N/A")</strong>
                                    </td>
                                    <td>
                                        <span class="badge bg-secondary">@floor.FloorNumber</span>
                                    </td>
                                    <td>
                                        <span class="badge bg-info">@floor.TotalRooms rooms</span>
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(floor.Description))
                                        {
                                            if (floor.Description.Length > 50)
                                            {
                                                <span title="@floor.Description">
                                                    @floor.Description.Substring(0, 50)...
                                                </span>
                                            }
                                            else
                                            {
                                                @floor.Description
                                            }
                                        }
                                        else
                                        {
                                            <span class="text-muted">N/A</span>
                                        }
                                    </td>
                                    <td>
                                        @if (floor.IsActive)
                                        {
                                            <span class="badge bg-success">
                                                <i class="bi bi-check-circle"></i> Active
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">
                                                <i class="bi bi-x-circle"></i> Inactive
                                            </span>
                                        }
                                    </td>
                                    <td>
                                        <small>@floor.CreatedAt.ToString("dd/MM/yyyy")</small><br />
                                        <small class="text-muted">@floor.CreatedAt.ToString("HH:mm")</small>
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group" role="group">
                                            <a asp-action="UserDetail" 
                                               asp-route-id="@floor.Id" 
                                               class="btn btn-sm btn-outline-info"
                                               title="View Details"
                                               data-bs-toggle="tooltip">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <button type="button" 
                                                    class="btn btn-sm btn-outline-danger"
                                                    title="Delete User"
                                                    data-bs-toggle="tooltip">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="9" class="text-center py-5">
                                    <i class="bi bi-inbox display-1 text-muted"></i>
                                    <p class="text-muted mt-3">No floors found</p>
                                    <a asp-action="AddFloor" class="btn btn-primary">
                                        <i class="bi bi-plus-circle"></i> Add First Floor
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            
            <!-- Pagination -->
            @if (Model != null && Model.TotalPages > 1)
            {
                @await Component.InvokeAsync("Pagination", new { 
                    pageList = Model, 
                    queryParams = queryParams,
                    actionName = "ListFloor"
                })
            }
        </div>
    </div>
</div>

<!-- Delete Form -->
<form id="deleteForm" method="post" style="display:none;">
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    <script>
        function changePageSize(size) {
            const url = new URL(window.location.href);
            url.searchParams.set('pageSize', size);
            url.searchParams.set('pageNumber', '1');
            window.location.href = url.toString();
        }
        
        setTimeout(function() {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);
    </script>

    <style>
        @@media print {
            .btn, .pagination, .card-header .btn-group, #bulkActions {
                display: none !important;
            }
        }

        .table-hover tbody tr:hover {
            cursor: pointer;
            background-color: #f8f9fa;
        }

        .badge {
            font-size: 0.85em;
            padding: 0.4em 0.6em;
        }
    </style>
}
