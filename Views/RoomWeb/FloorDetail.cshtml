@model HotelManagement.Services.Dto.FloorResponseModel
@{
    ViewData["Title"] = "Floor Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="mb-1">
                        <i class="fas fa-building text-primary"></i> Floor Details
                    </h2>
                    <p class="text-muted mb-0">View and manage floor information</p>
                </div>
                <a asp-action="ListFloors" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Back to List
                </a>
            </div>
            
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show shadow-sm" role="alert">
                    <i class="fas fa-check-circle me-2"></i>
                    <strong>Success!</strong> @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show shadow-sm" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <strong>Error!</strong> @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ValidationErrors"] != null)
            {
                var errors = System.Text.Json.JsonSerializer.Deserialize<List<string>>(TempData["ValidationErrors"].ToString());
                <div class="alert alert-danger alert-dismissible fade show shadow-sm">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Validation Errors:</strong>
                    <ul class="mb-0 mt-2">
                        @foreach (var error in errors)
                        {
                            <li>@error</li>
                        }
                    </ul>
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <div class="row">
                <div class="col-lg-4 mb-4">
                    <div class="card shadow-sm border-0 text-center">
                        <div class="card-body py-5">
                            <div class="floor-icon-large mb-4">
                                <i class="fas fa-building fa-5x text-primary"></i>
                            </div>
                            <h3 class="mb-2">Floor @Model.FloorNumber</h3>
                            @if (!string.IsNullOrEmpty(Model.FloorName))
                            {
                                <p class="text-muted fs-5 mb-3">@Model.FloorName</p>
                            }
                            <span class="badge bg-@(Model.IsActive ? "success" : "secondary") fs-6 mb-4">
                                <i class="fas fa-circle fa-xs"></i> @(Model.IsActive ? "Active" : "Inactive")
                            </span>
                            
                            <div class="room-count-highlight mb-4">
                                <i class="fas fa-door-open fa-3x text-primary mb-2"></i>
                                <h2 class="mb-0">@Model.TotalRooms</h2>
                                <small class="text-muted">Total Rooms</small>
                            </div>
                            
                            <div class="d-grid gap-2">
                                <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#editModal">
                                    <i class="fas fa-edit"></i> Edit Floor
                                </button>
                                
                                <button type="button" class="btn btn-outline-@(Model.IsActive ? "success" : "warning")" data-bs-toggle="modal" data-bs-target="#toggleStatusModal">
                                    <i class="fas fa-@(Model.IsActive ? "check" : "ban")"></i>
                                    @(Model.IsActive ? "Activate" : "Deactivate")
                                </button>

                                <button type="button" class="btn btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteModal">
                                    <i class="fas fa-trash"></i> Delete Floor
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Information Card -->
                    <div class="card shadow-sm border-0 mt-3">
                        <div class="card-header bg-light">
                            <h6 class="mb-0">
                                <i class="fas fa-info-circle"></i> Floor Information
                            </h6>
                        </div>
                        <div class="card-body">
                            <div class="info-item mb-3 pb-3 border-bottom">
                                <small class="text-muted d-block mb-1">Floor ID</small>
                                <code class="text-primary">@Model.Id.ToString().Substring(0, 13)...</code>
                            </div>
                            <div class="info-item mb-3 pb-3 border-bottom">
                                <small class="text-muted d-block mb-1">Created Date</small>
                                <strong>@Model.CreatedAt.ToString("MMM dd, yyyy")</strong>
                            </div>
                            <div class="info-item">
                                <small class="text-muted d-block mb-1">Last Updated</small>
                                <strong>@(Model.UpdatedAt?.ToString("MMM dd, yyyy") ?? "Never")</strong>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="col-lg-8">
                    <div class="card shadow-sm border-0 mb-3">
                        <div class="card-header bg-light">
                            <h5 class="mb-0">
                                <i class="fas fa-clipboard-list"></i> Floor Details
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <label class="text-muted small mb-1">
                                        <i class="fas fa-layer-group"></i> Floor Number
                                    </label>
                                    <div class="fw-bold fs-3">@Model.FloorNumber</div>
                                </div>
                                <div class="col-md-6 mb-4">
                                    <label class="text-muted small mb-1">
                                        <i class="fas fa-tag"></i> Floor Name
                                    </label>
                                    <div class="fw-bold fs-5">
                                        @if (!string.IsNullOrEmpty(Model.FloorName))
                                        {
                                            @Model.FloorName
                                        }
                                        else
                                        {
                                            <span class="text-muted">Not specified</span>
                                        }
                                    </div>
                                </div>
                                <div class="col-md-6 mb-4">
                                    <label class="text-muted small mb-1">
                                        <i class="fas fa-door-closed"></i> Total Rooms
                                    </label>
                                    <div class="fw-bold text-primary fs-4">@Model.TotalRooms</div>
                                </div>
                                <div class="col-md-6 mb-4">
                                    <label class="text-muted small mb-1">
                                        <i class="fas fa-toggle-on"></i> Status
                                    </label>
                                    <div>
                                        <span class="badge bg-@(Model.IsActive ? "success" : "secondary") fs-6">
                                            @(Model.IsActive ? "Active" : "Inactive")
                                        </span>
                                    </div>
                                </div>
                                <div class="col-md-6 mb-4">
                                    <label class="text-muted small mb-1">
                                        <i class="far fa-calendar-plus"></i> Created Date
                                    </label>
                                    <div class="fw-bold">
                                        @Model.CreatedAt.ToString("MMMM dd, yyyy hh:mm tt")
                                    </div>
                                </div>
                                <div class="col-md-6 mb-4">
                                    <label class="text-muted small mb-1">
                                        <i class="far fa-calendar-check"></i> Last Updated
                                    </label>
                                    <div class="fw-bold">
                                        @(Model.UpdatedAt?.ToString("MMMM dd, yyyy hh:mm tt") ?? "Never updated")
                                    </div>
                                </div>
                                <div class="col-12">
                                    <label class="text-muted small mb-1">
                                        <i class="fas fa-align-left"></i> Description
                                    </label>
                                    <div class="card bg-light border-0">
                                        <div class="card-body">
                                            @if (!string.IsNullOrEmpty(Model.Description))
                                            {
                                                <p class="mb-0">@Model.Description</p>
                                            }
                                            else
                                            {
                                                <p class="text-muted mb-0"><em>No description provided</em></p>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="card shadow-sm border-0 mb-3">
                        <div class="card-header bg-light d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">
                                <i class="fas fa-door-open"></i> Rooms on this Floor
                            </h5>
                            <span class="badge bg-primary rounded-pill">@Model.TotalRooms Rooms</span>
                        </div>
                        <div class="card-body">
                            @if (Model.TotalRooms > 0)
                            {
                                <div class="alert alert-info mb-3">
                                    <i class="fas fa-info-circle me-2"></i>
                                    This floor has <strong>@Model.TotalRooms</strong> room(s). Click below to view all rooms on this floor.
                                </div>
                                <a href="#" class="btn btn-primary">
                                    <i class="fas fa-list"></i> View All Rooms on Floor @Model.FloorNumber
                                </a>
                            }
                            else
                            {
                                <div class="text-center py-4 text-muted">
                                    <i class="fas fa-door-closed fa-4x mb-3 opacity-25"></i>
                                    <h5 class="text-muted">No Rooms Yet</h5>
                                    <p class="mb-3">No rooms have been added to this floor</p>
                                    <a href="#" class="btn btn-primary">
                                        <i class="fas fa-plus"></i> Add First Room
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <div class="card shadow-sm border-0 border-start border-primary border-4 h-100">
                                <div class="card-body">
                                    <h6 class="text-primary mb-3">
                                        <i class="fas fa-door-open"></i> Available Rooms
                                    </h6>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <h3 class="mb-0">-</h3>
                                            <small class="text-muted">Ready to book</small>
                                        </div>
                                        <i class="fas fa-check-circle fa-2x text-primary opacity-25"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 mb-3">
                            <div class="card shadow-sm border-0 border-start border-success border-4 h-100">
                                <div class="card-body">
                                    <h6 class="text-success mb-3">
                                        <i class="fas fa-users"></i> Occupancy Rate
                                    </h6>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <h3 class="mb-0">-</h3>
                                            <small class="text-muted">Current rate</small>
                                        </div>
                                        <i class="fas fa-chart-line fa-2x text-success opacity-25"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 mb-3">
                            <div class="card shadow-sm border-0 border-start border-warning border-4 h-100">
                                <div class="card-body">
                                    <h6 class="text-warning mb-3">
                                        <i class="fas fa-dollar-sign"></i> Revenue
                                    </h6>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <h3 class="mb-0">$0</h3>
                                            <small class="text-muted">This month</small>
                                        </div>
                                        <i class="fas fa-money-bill-wave fa-2x text-warning opacity-25"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="card shadow-sm border-0 mt-3">
                        <div class="card-header bg-light">
                            <h6 class="mb-0">
                                <i class="fas fa-history"></i> Activity Timeline
                            </h6>
                        </div>
                        <div class="card-body">
                            <div class="timeline">
                                <div class="timeline-item">
                                    <div class="timeline-marker bg-primary"></div>
                                    <div class="timeline-content">
                                        <h6 class="mb-1">Floor Created</h6>
                                        <p class="text-muted mb-0 small">
                                            <i class="far fa-clock"></i> @Model.CreatedAt.ToString("MMMM dd, yyyy hh:mm tt")
                                        </p>
                                    </div>
                                </div>
                                @if (Model.UpdatedAt.HasValue)
                                {
                                    <div class="timeline-item">
                                        <div class="timeline-marker bg-success"></div>
                                        <div class="timeline-content">
                                            <h6 class="mb-1">Last Updated</h6>
                                            <p class="text-muted mb-0 small">
                                                <i class="far fa-clock"></i> @Model.UpdatedAt.Value.ToString("MMMM dd, yyyy hh:mm tt")
                                            </p>
                                        </div>
                                    </div>
                                }
                                @if (!Model.IsActive)
                                {
                                    <div class="timeline-item">
                                        <div class="timeline-marker bg-warning"></div>
                                        <div class="timeline-content">
                                            <h6 class="mb-1">Floor Deactivated</h6>
                                            <p class="text-muted mb-0 small">
                                                <i class="fas fa-info-circle"></i> This floor is currently inactive
                                            </p>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form asp-action="EditFloor" asp-route-id="@Model.Id" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="editModalLabel">
                        <i class="fas fa-edit"></i> Edit Floor @Model.FloorNumber
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Floor Number <span class="text-danger">*</span></label>
                        <input type="text" name="FloorNumber" class="form-control" value="@Model.FloorNumber" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Floor Name</label>
                        <input type="text" name="FloorName" class="form-control" value="@Model.FloorName" placeholder="e.g., Executive Floor, VIP Floor">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">
                            Total Rooms <span class="text-danger">*</span>
                        </label>
                        <input asp-for="TotalRooms" type="number" class="form-control" value="@Model.TotalRooms" min="0" placeholder="Enter total number of rooms" required/>
                        <span id="total-room-error" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea name="Description" class="form-control" rows="4" placeholder="Enter floor description...">@Model.Description</textarea>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" name="IsActive" class="form-check-input" id="isActive" 
                               value="true" @(Model.IsActive ? "checked" : "")>
                        <label class="form-check-label" for="isActive">
                            Active Floor
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times"></i> Cancel
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Save Changes
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="toggleStatusModal" tabindex="-1" aria-labelledby="toggleStatusModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-secondary text-white border-0">
                <h5 class="modal-title" id="toggleStatusModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i> Confirm
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
               
                <p class="text-center mb-2">Are you sure you want to @(Model.IsActive? "deactivate" : "active") this amenity?</p>
                <div class="alert alert-warning mb-0">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <small><strong>Warning:</strong> This action cannot be undone!</small>
                </div>
            </div>
            <div class="modal-footer border-0 bg-light">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cancel
                </button>
                <form asp-action="ToggleFloorStatus" asp-route-id="@Model.Id" asp-route-returnTo="detail" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-primary">
                        @(Model.IsActive? "Deactivate" : "Active")
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-danger text-white border-0">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i> Confirm Delete
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <div class="text-center mb-3">
                    <i class="fas fa-building fa-4x text-danger mb-3"></i>
                </div>
                <p class="text-center mb-2">Are you sure you want to delete</p>
                <p class="text-center mb-3">
                    <strong class="fs-5">Floor @Model.FloorNumber</strong>
                    @if (!string.IsNullOrEmpty(Model.FloorName))
                    {
                        <span>(@Model.FloorName)</span>
                    }
                    ?
                </p>
                @if (Model.TotalRooms > 0)
                {
                    <div class="alert alert-danger mb-3">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <strong>Warning:</strong> This floor has <strong>@Model.TotalRooms</strong> room(s). Deleting will affect these rooms!
                    </div>
                }
                <div class="alert alert-warning mb-0">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <small><strong>Warning:</strong> This action cannot be undone!</small>
                </div>
            </div>
            <div class="modal-footer border-0 bg-light">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cancel
                </button>
                <form asp-action="DeleteFloor" asp-route-id="@Model.Id" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash"></i> Delete Floor
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    
    .floor-icon-large {
        animation: float 3s ease-in-out infinite;
    }

    @@keyframes float {
        0%, 100% { transform: translateY(0); }
        50% { transform: translateY(-10px); }
    }
    
    .room-count-highlight {
        padding: 2rem;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border-radius: 15px;
        border: 2px dashed #dee2e6;
    }
    
    .timeline {
        position: relative;
        padding-left: 30px;
    }

    .timeline::before {
        content: '';
        position: absolute;
        left: 8px;
        top: 0;
        bottom: 0;
        width: 2px;
        background: #dee2e6;
    }

    .timeline-item {
        position: relative;
        padding-bottom: 20px;
    }

    .timeline-item:last-child {
        padding-bottom: 0;
    }

    .timeline-marker {
        position: absolute;
        left: -26px;
        top: 4px;
        width: 16px;
        height: 16px;
        border-radius: 50%;
        border: 3px solid white;
        box-shadow: 0 0 0 2px currentColor;
    }

    .timeline-content {
        padding-left: 15px;
    }
    
    .info-item {
        transition: all 0.3s;
    }

    .info-item:hover {
        background: #f8f9fa;
        padding: 0.5rem;
        border-radius: 8px;
        margin-left: -0.5rem;
        margin-right: -0.5rem;
    }
    
    .card {
        transition: transform 0.2s, box-shadow 0.2s;
    }

    .card:hover {
        transform: translateY(-2px);
    }
    
    .border-4 {
        border-width: 4px !important;
    }
    
    .badge {
        font-weight: 500;
        padding: 0.5rem 1rem;
    }
    
    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .card {
        animation: fadeIn 0.5s ease-out;
    }
</style>


@section Scripts {
<script>
    setTimeout(function() {
        const alerts = document.querySelectorAll('.alert');
        alerts.forEach(alert => {
            const bsAlert = new bootstrap.Alert(alert);
            bsAlert.close();
        });
    }, 5000);
    
    document.querySelectorAll('form[method="post"]').forEach(form => {
        form.addEventListener('submit', function() {
            const submitBtn = this.querySelector('button[type="submit"]');
            if (submitBtn) {
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';
            }
        });
    });
</script>
}