@model HotelManagement.Services.Dto.AddRoomDto

@{
    ViewData["Title"] = "Add New Room";
}

@{
    var amenities = ViewBag.Amenities as List<HotelManagement.Services.Dto.AmenityResponseModel>;
}

<style>
    .form-card {
        background: white;
        border-radius: 15px;
        padding: 30px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        margin-bottom: 30px;
    }

    .section-header {
        display: flex;
        align-items: center;
        gap: 12px;
        margin-bottom: 25px;
        padding-bottom: 15px;
        border-bottom: 2px solid #f0f0f0;
    }

    .section-header i {
        font-size: 24px;
        color: #667eea;
    }

    .section-header h3 {
        margin: 0;
        font-size: 20px;
        font-weight: 700;
        color: #333;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-label {
        display: block;
        font-weight: 600;
        color: #333;
        margin-bottom: 8px;
        font-size: 14px;
    }

    .form-label .required {
        color: #e74c3c;
        margin-left: 3px;
    }

    .form-control, .form-select {
        width: 100%;
        padding: 12px 15px;
        border: 2px solid #e0e0e0;
        border-radius: 10px;
        font-size: 14px;
        transition: all 0.3s ease;
    }

    .form-control:focus, .form-select:focus {
        outline: none;
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }

    .form-control.is-invalid {
        border-color: #e74c3c;
    }

    .invalid-feedback {
        color: #e74c3c;
        font-size: 12px;
        margin-top: 5px;
        display: block;
    }

    .form-text {
        font-size: 12px;
        color: #999;
        margin-top: 5px;
        display: block;
    }

    .checkbox-group {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 15px;
        margin-top: 10px;
    }

    .custom-checkbox {
        display: flex;
        align-items: center;
        padding: 12px 15px;
        background: #f8f9fa;
        border-radius: 10px;
        cursor: pointer;
        transition: all 0.3s ease;
        border: 2px solid transparent;
    }

    .custom-checkbox:hover {
        background: #e9ecef;
    }

    .custom-checkbox input[type="checkbox"] {
        width: 20px;
        height: 20px;
        margin-right: 10px;
        cursor: pointer;
        accent-color: #667eea;
    }

    .custom-checkbox input[type="checkbox"]:checked {
        border-color: #667eea;
    }

    .custom-checkbox.checked {
        background: #e8ecff;
        border-color: #667eea;
    }

    .custom-checkbox label {
        cursor: pointer;
        margin: 0;
        font-weight: 500;
        color: #333;
    }

    .amenities-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
        gap: 12px;
        max-height: 300px;
        overflow-y: auto;
        padding: 15px;
        background: #f8f9fa;
        border-radius: 10px;
    }

    .amenity-checkbox {
        display: flex;
        align-items: center;
        padding: 10px;
        background: white;
        border-radius: 8px;
        border: 2px solid #e0e0e0;
        transition: all 0.3s ease;
        cursor: pointer;
    }

    .amenity-checkbox:hover {
        border-color: #667eea;
        transform: translateY(-2px);
        box-shadow: 0 2px 8px rgba(102, 126, 234, 0.2);
    }

    .amenity-checkbox input[type="checkbox"] {
        margin-right: 10px;
        accent-color: #667eea;
    }

    .amenity-checkbox.selected {
        background: #e8ecff;
        border-color: #667eea;
    }

    .button-group {
        display: flex;
        justify-content: end;
        gap: 15px;
        margin-top: 30px;
        padding-top: 20px;
        border-top: 2px solid #f0f0f0;
    }

    .btn-submit {
        padding: 15px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        border: none;
        border-radius: 12px;
        font-weight: 600;
        font-size: 16px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .btn-submit:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
    }

    .btn-cancel {
        padding: 15px 30px;
        background: white;
        color: #666;
        border: 2px solid #e0e0e0;
        border-radius: 12px;
        font-weight: 600;
        font-size: 16px;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
    }

    .btn-cancel:hover {
        border-color: #667eea;
        color: #667eea;
    }

    .input-icon {
        position: relative;
    }

    .input-icon i {
        position: absolute;
        left: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: #999;
    }

    .input-icon .form-control {
        padding-left: 45px;
    }

    .feature-badge {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        padding: 8px 15px;
        background: #e8ecff;
        border-radius: 20px;
        font-size: 13px;
        font-weight: 600;
        color: #667eea;
    }

    .feature-badge i {
        font-size: 16px;
    }
</style>

<div class="page-header mb-4">
    <h1 class="page-title">Add New Room</h1>
</div>

<form id="createRoomForm" asp-action="CreateRoom" method="post" novalidate>
    @Html.AntiForgeryToken()
    
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show col-lg-8" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="row">
        <div class="col-lg-8">
            <div class="form-card">
                <div class="section-header">
                    <i class="fas fa-info-circle"></i>
                    <h3>Basic Information</h3>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="form-label" asp-for="RoomNumber">
                                Room Number <span class="required">*</span>
                            </label>
                            <div class="input-icon">
                                <i class="fas fa-door-open"></i>
                                <input asp-for="RoomNumber" class="form-control" placeholder="Enter room number (e.g., 101, 205)" />
                            </div>
                            <span id="room-number-error" class="invalid-feedback"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="form-label" asp-for="RoomName">
                                Room Name
                            </label>
                            <div class="input-icon">
                                <i class="fas fa-tag"></i>
                                <input asp-for="RoomName" class="form-control" placeholder="Room name (optional)" />
                            </div>
                            <span asp-validation-for="RoomName" class="invalid-feedback"></span>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="form-label" asp-for="RoomTypeId">
                                Room Type <span class="required">*</span>
                            </label>
                            <select asp-for="RoomTypeId" asp-items="ViewBag.RoomTypes" class="form-select">
                                <option value="">-- Select Room Type --</option>
                            </select>
                            <span id="room-type-error" class="invalid-feedback"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="form-label" asp-for="FloorId">
                                Floor <span class="required">*</span>
                            </label>
                            <select asp-for="FloorId" asp-items="ViewBag.Floors" class="form-select">
                                <option value="">-- Select Floor --</option>
                            </select>
                            <span id="floor-error" class="invalid-feedback"></span>
                        </div>
                    </div>
                </div>
                
                <div class="form-group">
                    <label class="form-label" asp-for="Position">
                        Location
                    </label>
                    <div class="input-icon">
                        <i class="fas fa-map-marker-alt"></i>
                        <input asp-for="Position" class="form-control" placeholder="Room location (e.g., Corridor corner, Near elevator)" />
                    </div>
                    <small class="form-text">Describe the room's location on the floor</small>
                </div>
            </div>
            
            <div class="form-card">
                <div class="section-header">
                    <i class="fas fa-bed"></i>
                    <h3>Room Details</h3>
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label" asp-for="Capacity">
                                Capacity <span class="required">*</span>
                            </label>
                            <div class="input-icon">
                                <i class="fas fa-users"></i>
                                <input asp-for="Capacity" type="number" min="1" max="10" class="form-control" placeholder="Number of guests" />
                            </div>
                            <span id="capacity-error" class="invalid-feedback"></span>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label" asp-for="NumberOfBeds">
                                Number of Beds <span class="required">*</span>
                            </label>
                            <div class="input-icon">
                                <i class="fas fa-bed"></i>
                                <input asp-for="NumberOfBeds" type="number" min="1" max="5" class="form-control" placeholder="Number of beds" />
                            </div>
                            <span id="number-of-bed-error" class="invalid-feedback"></span>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label" asp-for="BedType">
                                Bed Type
                            </label>
                            <select asp-for="BedType" class="form-select">
                                <option value="">-- Select Bed Type --</option>
                                <option value="Single">Single Bed</option>
                                <option value="Double">Double Bed</option>
                                <option value="Queen">Queen Bed</option>
                                <option value="King">King Bed</option>
                                <option value="Twin">Twin Bed</option>
                            </select>
                            <span id="type-bed-error" class="invalid-feedback"></span>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="form-card">
                <div class="section-header">
                    <i class="fas fa-star"></i>
                    <h3>Room Features</h3>
                </div>

                <div class="checkbox-group">
                    <div class="custom-checkbox">
                        <input type="checkbox" asp-for="SmokingAllowed" id="SmokingAllowed" />
                        <label for="SmokingAllowed">
                            <i class="fas fa-smoking me-2"></i>Smoking Allowed
                        </label>
                    </div>

                    <div class="custom-checkbox">
                        <input type="checkbox" asp-for="PetFriendly" id="PetFriendly" />
                        <label for="PetFriendly">
                            <i class="fas fa-paw me-2"></i>Pet Friendly
                        </label>
                    </div>

                    <div class="custom-checkbox">
                        <input type="checkbox" asp-for="Accessible" id="Accessible" />
                        <label for="Accessible">
                            <i class="fas fa-wheelchair me-2"></i>Accessible Room
                        </label>
                    </div>
                </div>
            </div>
            
            <div class="form-card">
                <div class="section-header">
                    <i class="fas fa-list-check"></i>
                    <h3>Amenities</h3>
                </div>

                <div id="amenitiesGrid" class="amenities-grid">
                    @if (amenities == null || !amenities.Any())
                    {
                        <div class="text-center" style="grid-column: 1 / -1; padding: 20px;">
                            No amenities...
                        </div>
                    }
                    else
                    {
                        foreach (var amenity in amenities)
                        {
                            <div class="amenity-checkbox">
                                <input type="checkbox" name="AmenityIds" value="@amenity.Id" id="amenity_@amenity.Id" />
                                <label for="amenity_@amenity.Id">@amenity.AmenityName</label>
                            </div>
                        }
                    }
                </div>
            </div>
            
            <div class="form-card">
                <div class="section-header">
                    <i class="fas fa-sticky-note"></i>
                    <h3>Notes</h3>
                </div>

                <div class="form-group">
                    <textarea asp-for="Notes" class="form-control" rows="4" placeholder="Additional notes about the room (optional)"></textarea>
                </div>
            </div>
            <div class="button-group">
                <a href="@Url.Action("ListRoom", "RoomWeb")" class="btn-cancel">
                    <i class="fas fa-times me-2"></i>Cancel
                </a>
                <button type="submit" class="btn-submit">
                    <i class="fas fa-save me-2"></i>Save Room
                </button>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        document.addEventListener('DOMContentLoaded', async function() {
            const form = document.querySelector('form');
            const roomNumberInput = document.querySelector('input[name="RoomNumber"]');
            const roomNumberError = document.getElementById('room-number-error');
            const roomTypeInput = document.querySelector('select[id="RoomTypeId"]');
            const roomTypeError = document.getElementById('room-type-error');
            const floorInput = document.querySelector('select[id="FloorId"]');
            const floorError = document.getElementById('floor-error');
            const capacityInput = document.querySelector('input[id="Capacity"]');
            const capacityError = document.getElementById('capacity-error');
            const numberBedsInput = document.querySelector('input[id="NumberOfBeds"]');
            const numberBedsError = document.getElementById('number-of-bed-error');
            const bedTypeInput = document.querySelector('select[id="BedType"]');
            const bedTypeError = document.getElementById('type-bed-error');

            roomNumberInput.addEventListener('input', function() {
                roomNumberError.textContent = '';
                roomNumberInput.classList.remove('is-invalid');
            });

            roomTypeInput.addEventListener('input', function() {
                roomTypeError.textContent = '';
                roomTypeInput.classList.remove('is-invalid');
            });

            floorInput.addEventListener('input', function() {
                floorError.textContent = '';
                floorInput.classList.remove('is-invalid');
            });

            capacityInput.addEventListener('input', function() {
                capacityError.textContent = '';
                capacityInput.classList.remove('is-invalid');
            });

            numberBedsInput.addEventListener('input', function() {
                numberBedsError.textContent = '';
                numberBedsInput.classList.remove('is-invalid');
            });

            bedTypeInput.addEventListener('input', function() {
                bedTypeError.textContent = '';
                bedTypeInput.classList.remove('is-invalid');
            });

            form.addEventListener('submit', function(e) {
                e.preventDefault();

                let hasError = false;

                if (!roomNumberInput.value.trim()) {
                    roomNumberError.textContent = 'Please enter room number';
                    roomNumberInput.classList.add('is-invalid');
                    hasError = true;
                }

                if (!roomTypeInput.value.trim()) {
                    roomTypeError.textContent = 'Please select room type';
                    roomTypeInput.classList.add('is-invalid');
                    hasError = true;
                }

                if (!floorInput.value.trim()) {
                    floorError.textContent = 'Please select floor';
                    floorInput.classList.add('is-invalid');
                    hasError = true;
                }
                if (!capacityInput.value.trim()) {
                    capacityError.textContent = 'Please enter capacity';
                    capacityInput.classList.add('is-invalid');
                    hasError = true;
                }

                if (!numberBedsInput.value.trim()) {
                    numberBedsError.textContent = 'Please enter number beds';
                    numberBedsInput.classList.add('is-invalid');
                    hasError = true;
                }

                if (!bedTypeInput.value.trim()) {
                    bedTypeError.textContent = 'Please select bed type';
                    bedTypeInput.classList.add('is-invalid');
                    hasError = true;
                }

                if (!hasError) {
                    form.submit();
                }
            });
        });

        setTimeout(function() {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);
    </script>
}
