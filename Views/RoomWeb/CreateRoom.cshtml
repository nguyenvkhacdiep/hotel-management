@model HotelManagement.Services.Dto.AddRoomDto

@{
    ViewData["Title"] = "Add New Room";
}

@{
    var amenities = ViewBag.Amenities as List<HotelManagement.Services.Dto.AmenityResponseModel>;
}

<style>
    .form-card {
        background: white;
        border-radius: 15px;
        padding: 30px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        margin-bottom: 30px;
    }

    .section-header {
        display: flex;
        align-items: center;
        gap: 12px;
        margin-bottom: 25px;
        padding-bottom: 15px;
        border-bottom: 2px solid #f0f0f0;
    }

    .section-header i {
        font-size: 24px;
        color: #667eea;
    }

    .section-header h3 {
        margin: 0;
        font-size: 20px;
        font-weight: 700;
        color: #333;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-label {
        display: block;
        font-weight: 600;
        color: #333;
        margin-bottom: 8px;
        font-size: 14px;
    }

    .form-label .required {
        color: #e74c3c;
        margin-left: 3px;
    }

    .form-control, .form-select {
        width: 100%;
        padding: 12px 15px;
        border: 2px solid #e0e0e0;
        border-radius: 10px;
        font-size: 14px;
        transition: all 0.3s ease;
    }

    .form-control:focus, .form-select:focus {
        outline: none;
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }

    .form-control.is-invalid {
        border-color: #e74c3c;
    }

    .invalid-feedback {
        color: #e74c3c;
        font-size: 12px;
        margin-top: 5px;
        display: block;
    }

    .form-text {
        font-size: 12px;
        color: #999;
        margin-top: 5px;
        display: block;
    }

    .checkbox-group {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 15px;
        margin-top: 10px;
    }

    .custom-checkbox {
        display: flex;
        align-items: center;
        padding: 12px 15px;
        background: #f8f9fa;
        border-radius: 10px;
        cursor: pointer;
        transition: all 0.3s ease;
        border: 2px solid transparent;
    }

    .custom-checkbox:hover {
        background: #e9ecef;
    }

    .custom-checkbox input[type="checkbox"] {
        width: 20px;
        height: 20px;
        margin-right: 10px;
        cursor: pointer;
        accent-color: #667eea;
    }

    .custom-checkbox input[type="checkbox"]:checked {
        border-color: #667eea;
    }

    .custom-checkbox.checked {
        background: #e8ecff;
        border-color: #667eea;
    }

    .custom-checkbox label {
        cursor: pointer;
        margin: 0;
        font-weight: 500;
        color: #333;
    }

    .amenities-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
        gap: 12px;
        max-height: 300px;
        overflow-y: auto;
        padding: 15px;
        background: #f8f9fa;
        border-radius: 10px;
    }

    .amenity-checkbox {
        display: flex;
        align-items: center;
        padding: 10px;
        background: white;
        border-radius: 8px;
        border: 2px solid #e0e0e0;
        transition: all 0.3s ease;
        cursor: pointer;
    }

    .amenity-checkbox:hover {
        border-color: #667eea;
        transform: translateY(-2px);
        box-shadow: 0 2px 8px rgba(102, 126, 234, 0.2);
    }

    .amenity-checkbox input[type="checkbox"] {
        margin-right: 10px;
        accent-color: #667eea;
    }

    .amenity-checkbox.selected {
        background: #e8ecff;
        border-color: #667eea;
    }

    .button-group {
        display: flex;
        gap: 15px;
        margin-top: 30px;
        padding-top: 20px;
        border-top: 2px solid #f0f0f0;
    }

    .btn-submit {
        flex: 1;
        padding: 15px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        border: none;
        border-radius: 12px;
        font-weight: 600;
        font-size: 16px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .btn-submit:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
    }

    .btn-cancel {
        padding: 15px 30px;
        background: white;
        color: #666;
        border: 2px solid #e0e0e0;
        border-radius: 12px;
        font-weight: 600;
        font-size: 16px;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
    }

    .btn-cancel:hover {
        border-color: #667eea;
        color: #667eea;
    }

    .input-icon {
        position: relative;
    }

    .input-icon i {
        position: absolute;
        left: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: #999;
    }

    .input-icon .form-control {
        padding-left: 45px;
    }

    .feature-badge {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        padding: 8px 15px;
        background: #e8ecff;
        border-radius: 20px;
        font-size: 13px;
        font-weight: 600;
        color: #667eea;
    }

    .feature-badge i {
        font-size: 16px;
    }
</style>

<div class="page-header mb-4">
    <h1 class="page-title">Add New Room</h1>
</div>

<form id="createRoomForm" asp-action="CreateRoom" method="post">
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-lg-8">
            <div class="form-card">
                <div class="section-header">
                    <i class="fas fa-info-circle"></i>
                    <h3>Basic Information</h3>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="form-label" asp-for="RoomNumber">
                                Room Number <span class="required">*</span>
                            </label>
                            <div class="input-icon">
                                <i class="fas fa-door-open"></i>
                                <input asp-for="RoomNumber" class="form-control" placeholder="Enter room number (e.g., 101, 205)" />
                            </div>
                            <span asp-validation-for="RoomNumber" class="invalid-feedback"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="form-label" asp-for="RoomName">
                                Room Name
                            </label>
                            <div class="input-icon">
                                <i class="fas fa-tag"></i>
                                <input asp-for="RoomName" class="form-control" placeholder="Room name (optional)" />
                            </div>
                            <span asp-validation-for="RoomName" class="invalid-feedback"></span>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="form-label" asp-for="RoomTypeId">
                                Room Type <span class="required">*</span>
                            </label>
                            <select asp-for="RoomTypeId" asp-items="ViewBag.RoomTypes" class="form-select" id="roomTypeSelect">
                                <option value="">-- Select Room Type --</option>
                            </select>
                            <span asp-validation-for="RoomTypeId" class="invalid-feedback"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="form-label" asp-for="FloorId">
                                Floor <span class="required">*</span>
                            </label>
                            <select asp-for="FloorId" asp-items="ViewBag.Floors" class="form-select" id="floorSelect">
                                <option value="">-- Select Floor --</option>
                            </select>
                            <span asp-validation-for="FloorId" class="invalid-feedback"></span>
                        </div>
                    </div>
                </div>

                <!-- Position -->
                <div class="form-group">
                    <label class="form-label" asp-for="Position">
                        Location
                    </label>
                    <div class="input-icon">
                        <i class="fas fa-map-marker-alt"></i>
                        <input asp-for="Position" class="form-control" placeholder="Room location (e.g., Corridor corner, Near elevator)" />
                    </div>
                    <small class="form-text">Describe the room's location on the floor</small>
                </div>
            </div>
            
            <div class="form-card">
                <div class="section-header">
                    <i class="fas fa-bed"></i>
                    <h3>Room Details</h3>
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label" asp-for="Capacity">
                                Capacity <span class="required">*</span>
                            </label>
                            <div class="input-icon">
                                <i class="fas fa-users"></i>
                                <input asp-for="Capacity" type="number" min="1" max="10" class="form-control" placeholder="Number of guests" />
                            </div>
                            <span asp-validation-for="Capacity" class="invalid-feedback"></span>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label" asp-for="NumberOfBeds">
                                Number of Beds <span class="required">*</span>
                            </label>
                            <div class="input-icon">
                                <i class="fas fa-bed"></i>
                                <input asp-for="NumberOfBeds" type="number" min="1" max="5" class="form-control" placeholder="Number of beds" />
                            </div>
                            <span asp-validation-for="NumberOfBeds" class="invalid-feedback"></span>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label" asp-for="BedType">
                                Bed Type
                            </label>
                            <select asp-for="BedType" class="form-select">
                                <option value="">-- Select Bed Type --</option>
                                <option value="Single">Single Bed</option>
                                <option value="Double">Double Bed</option>
                                <option value="Queen">Queen Bed</option>
                                <option value="King">King Bed</option>
                                <option value="Twin">Twin Bed</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="form-card">
                <div class="section-header">
                    <i class="fas fa-star"></i>
                    <h3>Room Features</h3>
                </div>

                <div class="checkbox-group">
                    <div class="custom-checkbox" onclick="toggleCheckbox(this, 'SmokingAllowed')">
                        <input type="checkbox" asp-for="SmokingAllowed" id="SmokingAllowed" />
                        <label for="SmokingAllowed">
                            <i class="fas fa-smoking me-2"></i>Smoking Allowed
                        </label>
                    </div>

                    <div class="custom-checkbox" onclick="toggleCheckbox(this, 'PetFriendly')">
                        <input type="checkbox" asp-for="PetFriendly" id="PetFriendly" />
                        <label for="PetFriendly">
                            <i class="fas fa-paw me-2"></i>Pet Friendly
                        </label>
                    </div>

                    <div class="custom-checkbox" onclick="toggleCheckbox(this, 'Accessible')">
                        <input type="checkbox" asp-for="Accessible" id="Accessible" />
                        <label for="Accessible">
                            <i class="fas fa-wheelchair me-2"></i>Accessible Room
                        </label>
                    </div>
                </div>
            </div>
            
            <div class="form-card">
                <div class="section-header">
                    <i class="fas fa-list-check"></i>
                    <h3>Amenities</h3>
                </div>

                <div id="amenitiesGrid" class="amenities-grid">
                    @if (amenities == null || !amenities.Any())
                    {
                        <div class="text-center" style="grid-column: 1 / -1; padding: 20px;">
                            <i class="fas fa-spinner fa-spin me-2"></i>Loading amenities...
                        </div>
                    }
                    else
                    {
                        foreach (var amenity in amenities)
                        {
                            <div class="amenity-checkbox" onclick="toggleAmenity(this, '${amenity.id}')">
                                <input type="checkbox" name="AmenityIds" value="@amenity.Id" id="amenity_@amenity.Id" />
                                <label for="amenity_@amenity.Id">@amenity.AmenityName</label>
                            </div>
                        }
                    }
                </div>
            </div>
            
            <div class="form-card">
                <div class="section-header">
                    <i class="fas fa-sticky-note"></i>
                    <h3>Notes</h3>
                </div>

                <div class="form-group">
                    <textarea asp-for="Notes" class="form-control" rows="4" placeholder="Additional notes about the room (optional)"></textarea>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <!-- Preview Card -->
            <div class="form-card sticky-top" style="top: 20px;">
                <div class="section-header">
                    <i class="fas fa-eye"></i>
                    <h3>Preview</h3>
                </div>

                <div class="text-center mb-3">
                    <div style="width: 100%; height: 200px; background: linear-gradient(135deg, #667eea, #764ba2); border-radius: 12px; display: flex; align-items: center; justify-content: center;">
                        <i class="fas fa-bed" style="font-size: 64px; color: white; opacity: 0.5;"></i>
                    </div>
                </div>

                <div class="mb-3">
                    <h4 id="previewRoomNumber" style="font-size: 24px; font-weight: 700; color: #333;">---</h4>
                    <p id="previewRoomName" class="text-muted" style="display: none;">---</p>
                </div>

                <div class="mb-3">
                    <span id="previewRoomType" class="feature-badge">
                        <i class="fas fa-layer-group"></i>
                        Room type not selected
                    </span>
                </div>

                <div class="mb-3">
                    <div class="d-flex align-items-center gap-2 mb-2">
                        <i class="fas fa-building text-muted"></i>
                        <span id="previewFloor">Floor not selected</span>
                    </div>
                    <div class="d-flex align-items-center gap-2 mb-2">
                        <i class="fas fa-users text-muted"></i>
                        <span id="previewCapacity">-- guests</span>
                    </div>
                    <div class="d-flex align-items-center gap-2">
                        <i class="fas fa-bed text-muted"></i>
                        <span id="previewBeds">-- beds</span>
                    </div>
                </div>

                <div id="previewFeatures" style="display: none;">
                    <div class="section-header" style="margin-bottom: 15px; padding-bottom: 10px;">
                        <i class="fas fa-check-circle"></i>
                        <h5 style="margin: 0; font-size: 14px;">Features</h5>
                    </div>
                    <div id="featuresList"></div>
                </div>
            </div>
            
            <div class="button-group" style="position: sticky; top: 620px;">
                <a href="@Url.Action("ListRoom", "RoomWeb")" class="btn-cancel">
                    <i class="fas fa-times me-2"></i>Cancel
                </a>
                <button type="submit" class="btn-submit">
                    <i class="fas fa-save me-2"></i>Save Room
                </button>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        document.addEventListener('DOMContentLoaded', async function() {
            setupPreviewListeners();
        });
        
        function toggleAmenity(element, amenityId) {
            const checkbox = element.querySelector('input[type="checkbox"]');
            checkbox.checked = !checkbox.checked;
            element.classList.toggle('selected', checkbox.checked);
        }
        
        function toggleCheckbox(element, checkboxId) {
            const checkbox = document.getElementById(checkboxId);
            checkbox.checked = !checkbox.checked;
            element.classList.toggle('checked', checkbox.checked);
            updatePreview();
        }
        
        function setupPreviewListeners() {
            document.getElementById('RoomNumber').addEventListener('input', updatePreview);
            document.getElementById('RoomName').addEventListener('input', updatePreview);
            document.getElementById('roomTypeSelect').addEventListener('change', updatePreview);
            document.getElementById('floorSelect').addEventListener('change', updatePreview);
            document.getElementById('Capacity').addEventListener('input', updatePreview);
            document.getElementById('NumberOfBeds').addEventListener('input', updatePreview);
            document.getElementById('SmokingAllowed').addEventListener('change', updatePreview);
            document.getElementById('PetFriendly').addEventListener('change', updatePreview);
            document.getElementById('Accessible').addEventListener('change', updatePreview);
        }
        
        function updatePreview() {
            const roomNumber = document.getElementById('RoomNumber').value || '---';
            document.getElementById('previewRoomNumber').textContent = 'Room ' + roomNumber;

            const floors = @Html.Raw(Json.Serialize(ViewBag.Floors));
            const roomTypes = @Html.Raw(Json.Serialize(ViewBag.RoomTypes));

            const roomName = document.getElementById('RoomName').value;
            const previewRoomName = document.getElementById('previewRoomName');
            if (roomName) {
                previewRoomName.textContent = roomName;
                previewRoomName.style.display = 'block';
            } else {
                previewRoomName.style.display = 'none';
            }

            const roomTypeId = document.getElementById('roomTypeSelect').value;
            const roomType = roomTypes.find(t => t.value === roomTypeId);
            document.getElementById('previewRoomType').innerHTML = roomType
                ? `<i class="fas fa-layer-group"></i>${roomType.text}`
                : `<i class="fas fa-layer-group"></i>Room type not selected`;

            const floorId = document.getElementById('floorSelect').value;
            const floor = floors.find(f => f.value === floorId);
            document.getElementById('previewFloor').textContent = floor
                ? `Floor ${floor.text ? floor.text : ''}`
                : 'Floor not selected';

            const capacity = document.getElementById('Capacity').value || '--';
            document.getElementById('previewCapacity').textContent = `${capacity} guests`;

            const beds = document.getElementById('NumberOfBeds').value || '--';
            document.getElementById('previewBeds').textContent = `${beds} beds`;

            const features = [];
            if (document.getElementById('SmokingAllowed').checked) features.push('<i class="fas fa-smoking me-2"></i>Smoking Allowed');
            if (document.getElementById('PetFriendly').checked) features.push('<i class="fas fa-paw me-2"></i>Pet Friendly');
            if (document.getElementById('Accessible').checked) features.push('<i class="fas fa-wheelchair me-2"></i>Accessible');

            const previewFeatures = document.getElementById('previewFeatures');
            const featuresList = document.getElementById('featuresList');
            if (features.length > 0) {
                previewFeatures.style.display = 'block';
                featuresList.innerHTML = features.map(f => `<div class="mb-2">${f}</div>`).join('');
            } else {
                previewFeatures.style.display = 'none';
            }
        }
    </script>
}
