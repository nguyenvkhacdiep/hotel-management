@using HotelManagement.Models.Common
@model HotelManagement.Services.Common.PageList<HotelManagement.Services.Dto.RoomPriceResponseModel>

@{
    var queryParams = ViewBag.QueryParams as QueryParameters ?? QueryParameters.FromRequest(Context.Request);
    var filters = ViewBag.Filters as List<FilterConfig>;
}

@{
    ViewData["Title"] = "Room Price Management";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-md-6">
            <h2>
                <i class="bi bi-building"></i> Room Price Management
            </h2>
        </div>
        <div class="col-md-6 text-end">
            <a asp-action="AddRoomPrice" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> Add New Room Price
            </a>
        </div>
    </div>
    
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    
    <div class="card mb-4">
        <div class="card-body">
            @await Html.PartialAsync("_DynamicFilterPartial", (queryParams, filters))
        </div>
    </div>
    
    <div class="card">
        <div class="card-header bg-light">
            <div class="row align-items-center">
                <div class="col">
                    <h5 class="mb-0">Floor List</h5>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="d-flex align-items-center">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <page-size-selector current-page-size="@queryParams.PageSize"></page-size-selector>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 text-end">
                    <span class="text-muted">
                        Showing @(Model != null && Model.Data.Any() ? (Model.PageIndex - 1) * Model.PageSize + 1 : 0) 
                        to @(Model != null ? Math.Min(Model.PageIndex * Model.PageSize, Model.TotalItems) : 0) 
                        of @(Model?.TotalItems ?? 0) entries
                    </span>
                </div>
            </div>
            
            <div class="table-responsive">
                <table class="table table-striped table-hover align-middle" id="floorTable">
                    <thead class="table-dark">
                        <tr>
                            <th style="width: 60px;">#</th>
                            <th>Room Info</th>
                            <th>Season</th>
                            <th>Day Type</th>
                            <th>Price/Night</th>
                            <th>Status</th>
                            <th>Priority</th>
                            <th style="width: 200px;">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Data.Any())
                        {
                            var index = (Model.PageIndex - 1) * Model.PageSize;
                            @foreach (var item in Model.Data)
                            {
                                index++;
                                <tr>
                                    <td>@index</td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div>
                                                <small class="text-muted">@item.RoomTypeName</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="badge bg-info">@item.SeasonName</span>
                                    </td>
                                    <td>
                                        <span class="badge @(item.DayType == DayType.Weekday ? "bg-success" : "bg-warning")">
                                            @item.DayType
                                        </span>
                                    </td>
                                    <td>
                                        <strong class="text-success">$@item.PricePerNight</strong>
                                    </td>
                                    <td>
                                        <small>
                                            @item.StartDate.ToString("MMM dd, yyyy")<br/>
                                            <span class="text-muted">to</span><br/>
                                            @item.EndDate.ToString("MMM dd, yyyy")
                                        </small>
                                    </td>
                                    <td>
                                        <span class="badge @(item.IsActive ? "bg-success" : "bg-danger")">
                                            @(item.IsActive ? "Active" : "Inactive")
                                        </span>
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm" role="group">
                                            <a asp-action="RoomPriceDetail"
                                               asp-route-id="@item.Id"
                                               class="btn btn-sm btn-outline-info"
                                               title="View Details"
                                               data-bs-toggle="tooltip">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <button type="button"
                                                    class="btn btn-outline-danger btn-sm"
                                                    data-floor-id="@item.Id"
                                                    onclick="confirmDelete(this)">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="9" class="text-center py-5">
                                    <i class="bi bi-inbox display-1 text-muted"></i>
                                    <p class="text-muted mt-3">No floors found</p>
                                    <a asp-action="AddFloor" class="btn btn-primary">
                                        <i class="bi bi-plus-circle"></i> Add First Floor
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            
            @if (Model != null && Model.TotalPages > 1)
            {
                @await Component.InvokeAsync("Pagination", new { 
                    pageList = Model, 
                    queryParams = queryParams,
                    actionName = "ListRoomPrice"
                })
            }
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-danger text-white border-0">
                <h5 class="modal-title">
                    <i class="fas fa-exclamation-triangle me-2"></i> Confirm Delete
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body p-4">
                <div class="text-center mb-3">
                    <i class="fas fa-building fa-4x text-danger mb-3"></i>
                </div>
                <p class="text-center mb-2">Are you sure you want to delete this record?</p>
                <div class="alert alert-warning mb-0">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <small><strong>Warning:</strong> This action cannot be undone!</small>
                </div>
            </div>
            <div class="modal-footer border-0 bg-light">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cancel
                </button>
                <form id="deleteForm" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash"></i> Delete Floor
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function changePageSize(size) {
            const url = new URL(window.location.href);
            url.searchParams.set('pageSize', size);
            url.searchParams.set('pageNumber', '1');
            window.location.href = url.toString();
        }

        function confirmDelete(button) {
            const floorId = button.getAttribute('data-floor-id');
            
            document.getElementById('deleteForm').action = 'delete-room-price/' + floorId;

            var modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }
        
        setTimeout(function() {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);
    </script>

    <style>
        @@media print {
            .btn, .pagination, .card-header .btn-group, #bulkActions {
                display: none !important;
            }
        }

        .table-hover tbody tr:hover {
            cursor: pointer;
            background-color: #f8f9fa;
        }

        .badge {
            font-size: 0.85em;
            padding: 0.4em 0.6em;
        }
    </style>
}
