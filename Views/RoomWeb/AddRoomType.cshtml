@model HotelManagement.Services.Dto.AddRoomTypeDto

@{
    ViewData["Title"] = "Add New Room Type";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-md-6">
            <h2>
                <i class="bi bi-bed"></i> Add New Room Type
            </h2>
            <p class="text-muted">Create a new room type for the hotel</p>
        </div>
    </div>
    
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    
    <div class="card">
        <div class="card-header bg-light">
            <h5 class="mb-0">Room Type Details</h5>
        </div>
        <div class="card-body">
            <form asp-action="AddRoomType" method="post" novalidate>
                @Html.AntiForgeryToken()
                
                <div class="mb-3">
                    <label asp-for="Name" class="form-label"><i class="bi bi-text-paragraph"></i> Name <span class="text-danger">*</span></label>
                    <input asp-for="Name" class="form-control" placeholder="Enter room type name" required />
                    <span id="name-error" class="text-danger small"></span>
                </div>
                
                <div class="mb-3">
                    <label asp-for="Description" class="form-label"><i class="bi bi-card-text"></i> Description</label>
                    <textarea asp-for="Description" class="form-control" placeholder="Enter description (optional)" rows="3"></textarea>
                    <span asp-validation-for="Description" class="text-danger small"></span>
                </div>
                
                <div class="mb-3">
                    <label asp-for="MaxCapacity" class="form-label"><i class="bi bi-people"></i> Max Capacity <span class="text-danger">*</span></label>
                    <input asp-for="MaxCapacity" type="number" class="form-control" placeholder="Enter maximum capacity" min="1" required />
                    <span id="capacity-error" class="text-danger small"></span>
                </div>
                
                <div class="mb-3">
                    <label asp-for="PricePerNight" class="form-label"><i class="bi bi-currency-dollar"></i> Price Per Night <span class="text-danger">*</span></label>
                    <input asp-for="PricePerNight" type="number" step="0.01" class="form-control" placeholder="Enter price per night" min="0" required />
                    <span id="price-error" class="text-danger small"></span>
                </div>
                
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Add Room Type
                </button>
                <a asp-action="ListRoomType" class="btn btn-outline-secondary ms-2">
                    <i class="bi bi-arrow-left-circle"></i> Back to List
                </a>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');
            const nameInput = document.querySelector('input[name="Name"]');
            const nameError = document.getElementById('name-error');
            const pricePerNightInput = document.querySelector('input[id="PricePerNight"]');
            const pricePerNightError = document.getElementById('price-error');
            const maxCapacityInput = document.querySelector('input[id="MaxCapacity"]');
            const maxCapacityError = document.getElementById('capacity-error');

            nameInput.addEventListener('input', function() {
                nameError.textContent = '';
                nameInput.classList.remove('is-invalid');
            });

            pricePerNightInput.addEventListener('input', function() {
                pricePerNightError.textContent = '';
                pricePerNightInput.classList.remove('is-invalid');
            });

            maxCapacityInput.addEventListener('input', function() {
                maxCapacityError.textContent = '';
                maxCapacityInput.classList.remove('is-invalid');
            });

            form.addEventListener('submit', function(e) {
                e.preventDefault();

                let hasError = false;

                if (!nameInput.value.trim()) {
                    nameError.textContent = 'Please enter name';
                    nameInput.classList.add('is-invalid');
                    hasError = true;
                }

                if (!pricePerNightInput.value.trim()) {
                    pricePerNightError.textContent = 'Please enter price per night';
                    pricePerNightInput.classList.add('is-invalid');
                    hasError = true;
                }

                if (!maxCapacityInput.value.trim()) {
                    maxCapacityError.textContent = 'Please enter max capacity';
                    maxCapacityInput.classList.add('is-invalid');
                    hasError = true;
                }

                if (!hasError) {
                    form.submit();
                }
            });
        });
        
        setTimeout(function() {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);
    </script>
}