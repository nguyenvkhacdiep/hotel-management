@using HotelManagement.Models.Common
@model HotelManagement.Services.Dto.RoomDetailResponseModel

@{
    ViewData["Title"] = "Room Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="mb-1">
                        <i class="fas fa-door-open text-primary"></i> Room Details
                    </h2>
                    <p class="text-muted mb-0">View and manage room information</p>
                </div>
                <a asp-action="ListRoom" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Back to List
                </a>
            </div>

            <!-- Alert Messages -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show shadow-sm" role="alert">
                    <i class="fas fa-check-circle me-2"></i>
                    <strong>Success!</strong> @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show shadow-sm" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <strong>Error!</strong> @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ValidationErrors"] != null)
            {
                var errors = System.Text.Json.JsonSerializer.Deserialize<List<string>>(TempData["ValidationErrors"].ToString());
                <div class="alert alert-danger alert-dismissible fade show shadow-sm">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Validation Errors:</strong>
                    <ul class="mb-0 mt-2">
                        @foreach (var error in errors)
                        {
                            <li>@error</li>
                        }
                    </ul>
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <div class="row">
                <!-- Left Column - Room Overview -->
                <div class="col-lg-4 mb-4">
                    <!-- Room Status Card -->
                    <div class="card shadow-sm border-0 text-center">
                        <div class="card-body py-5">
                            <div class="room-icon-large mb-4">
                                <i class="fas fa-door-closed fa-5x text-@(GetStatusColor(Model.Status))"></i>
                            </div>
                            <h3 class="mb-2">Room @Model.RoomNumber</h3>
                            <span class="badge bg-@(GetStatusColor(Model.Status)) fs-6 mb-3">
                                <i class="fas fa-circle fa-xs"></i> @GetStatusDisplay(Model.Status)
                            </span>
                            <h4 class="text-primary mb-4">
                                @((Model.ActivePrices != null && Model.ActivePrices.Any()
                                    ? Model.ActivePrices[0].PricePerNight
                                    : Model.BasePrice).ToString("N2")) <small class="text-muted">/night</small>
                            </h4>
                            
                            <!-- Quick Actions -->
                            <div class="d-grid gap-2">
                                <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#editModal">
                                    <i class="fas fa-edit"></i> Edit Room
                                </button>
                                
                                <form asp-action="ToggleRoomStatus" asp-route-id="@Model.Id" method="post" 
                                      onsubmit="return confirm('Are you sure you want to change room status?');">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-outline-@(GetStatusColor(Model.Status)) w-100">
                                        <i class="fas fa-sync-alt"></i> Change Status
                                    </button>
                                </form>

                                <button type="button" class="btn btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteModal">
                                    <i class="fas fa-trash"></i> Delete Room
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Room Type Card -->
                    <div class="card shadow-sm border-0 mt-3">
                        <div class="card-header bg-light">
                            <h6 class="mb-0">
                                <i class="fas fa-info-circle"></i> Room Type
                            </h6>
                        </div>
                        <div class="card-body">
                            <h5 class="text-primary mb-3">@Model.RoomTypeName</h5>
                            <div class="d-flex justify-content-between align-items-center p-3 bg-light rounded">
                                <span><i class="fas fa-users"></i> Capacity</span>
                                <strong class="badge bg-primary rounded-pill">@Model.Capacity Guests</strong>
                            </div>
                        </div>
                    </div>

                    <!-- Floor Info Card -->
                    <div class="card shadow-sm border-0 mt-3">
                        <div class="card-header bg-light">
                            <h6 class="mb-0">
                                <i class="fas fa-building"></i> Floor Information
                            </h6>
                        </div>
                        <div class="card-body text-center">
                            <i class="fas fa-layer-group fa-3x text-primary mb-3"></i>
                            <h4 class="mb-1">Floor @Model.FloorNumber</h4>
                            @if (!string.IsNullOrEmpty(Model.FloorName))
                            {
                                <p class="text-muted mb-0">@Model.FloorName</p>
                            }
                        </div>
                    </div>
                </div>

                <!-- Right Column - Details -->
                <div class="col-lg-8">
                    <!-- Main Details Card -->
                    <div class="card shadow-sm border-0 mb-3">
                        <div class="card-header bg-light">
                            <h5 class="mb-0">
                                <i class="fas fa-info-circle"></i> Room Information
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <label class="text-muted small mb-1">
                                        <i class="fas fa-hashtag"></i> Room Number
                                    </label>
                                    <div class="fw-bold fs-4">@Model.RoomNumber</div>
                                </div>
                                <div class="col-md-6 mb-4">
                                    <label class="text-muted small mb-1">
                                        <i class="fas fa-door-open"></i> Room ID
                                    </label>
                                    <div class="fw-bold">
                                        <code class="text-primary">@Model.Id.ToString().Substring(0, 8)...</code>
                                    </div>
                                </div>
                                <div class="col-md-6 mb-4">
                                    <label class="text-muted small mb-1">
                                        <i class="fas fa-dollar-sign"></i> Price per Night
                                    </label>
                                    <div class="fw-bold text-success fs-5">
                                        @((Model.ActivePrices != null && Model.ActivePrices.Any()
                                            ? Model.ActivePrices[0].PricePerNight
                                            : Model.BasePrice).ToString("N2"))
                                    </div>
                                </div>
                                <div class="col-md-6 mb-4">
                                    <label class="text-muted small mb-1">
                                        <i class="fas fa-signal"></i> Current Status
                                    </label>
                                    <div>
                                        <span class="badge bg-@(GetStatusColor(Model.Status)) fs-6">
                                            @GetStatusDisplay(Model.Status)
                                        </span>
                                    </div>
                                </div>
                                <div class="col-md-6 mb-4">
                                    <label class="text-muted small mb-1">
                                        <i class="far fa-calendar-plus"></i> Created Date
                                    </label>
                                    <div class="fw-bold">
                                        @Model.CreatedAt.ToString("MMMM dd, yyyy hh:mm tt")
                                    </div>
                                </div>
                                <div class="col-md-6 mb-4">
                                    <label class="text-muted small mb-1">
                                        <i class="far fa-calendar-check"></i> Last Updated
                                    </label>
                                    <div class="fw-bold">
                                        @(Model.UpdatedAt?.ToString("MMMM dd, yyyy hh:mm tt") ?? "Never")
                                    </div>
                                </div>
                                <div class="col-12">
                                    <label class="text-muted small mb-1">
                                        <i class="fas fa-align-left"></i> Notes
                                    </label>
                                    <div class="card bg-light border-0">
                                        <div class="card-body">
                                            @if (!string.IsNullOrEmpty(Model.Notes))
                                            {
                                                <p class="mb-0">@Model.Notes</p>
                                            }
                                            else
                                            {
                                                <p class="text-muted mb-0"><em>No notes provided</em></p>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Amenities Card -->
                    <div class="card shadow-sm border-0 mb-3">
                        <div class="card-header bg-light d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">
                                <i class="fas fa-star"></i> Room Amenities
                            </h5>
                            <span class="badge bg-primary rounded-pill">@(Model.Amenities?.Count ?? 0) Amenities</span>
                        </div>
                        <div class="card-body">
                            @if (Model.Amenities != null && Model.Amenities.Any())
                            {
                                <div class="row g-3">
                                    @foreach (var amenity in Model.Amenities)
                                    {
                                        <div class="col-md-6 col-lg-4">
                                            <div class="amenity-item">
                                                <div class="d-flex align-items-center">
                                                    <span class="fw-bold">@amenity</span>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="text-center py-4 text-muted">
                                    <i class="fas fa-star fa-3x mb-3 opacity-25"></i>
                                    <p class="mb-0">No amenities assigned to this room</p>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Statistics Cards -->
                    <div class="row">
                        <div class="col-md-4">
                            <div class="card shadow-sm border-0 border-start border-primary border-4 h-100">
                                <div class="card-body">
                                    <h6 class="text-primary mb-3">
                                        <i class="fas fa-calendar-check"></i> Total Bookings
                                    </h6>
                                    <h3 class="mb-0">0</h3>
                                    <small class="text-muted">All time bookings</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="card shadow-sm border-0 border-start border-success border-4 h-100">
                                <div class="card-body">
                                    <h6 class="text-success mb-3">
                                        <i class="fas fa-dollar-sign"></i> Revenue
                                    </h6>
                                    <h3 class="mb-0">$0</h3>
                                    <small class="text-muted">Total revenue</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="card shadow-sm border-0 border-start border-warning border-4 h-100">
                                <div class="card-body">
                                    <h6 class="text-warning mb-3">
                                        <i class="fas fa-star"></i> Rating
                                    </h6>
                                    <h3 class="mb-0">-</h3>
                                    <small class="text-muted">Average rating</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Room Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <form asp-action="UpdateRoom" asp-route-id="@Model.Id" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="editModalLabel">
                        <i class="fas fa-edit"></i> Edit Room @Model.RoomNumber
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Room Number <span class="text-danger">*</span></label>
                            <input type="text" name="RoomNumber" class="form-control" value="@Model.RoomNumber" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Price per Night <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input type="number" name="PricePerNight" class="form-control" value="@((Model.ActivePrices != null && Model.ActivePrices.Any()
                                                                                                          ? Model.ActivePrices[0].PricePerNight
                                                                                                          : Model.BasePrice).ToString("N2"))" step="0.01" required>
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Status <span class="text-danger">*</span></label>
                            <select name="Status" class="form-select" required>
                                <option value="0" selected="@(Model.Status == RoomStatus.Available)">Available</option>
                                <option value="1" selected="@(Model.Status == RoomStatus.Occupied)">Occupied</option>
                                <option value="2" selected="@(Model.Status == RoomStatus.Maintenance)">Maintenance</option>
                                <option value="3" selected="@(Model.Status == RoomStatus.Cleaning)">Cleaning</option>
                                <option value="4" selected="@(Model.Status == RoomStatus.Reserved)">Reserved</option>
                            </select>
                        </div>
                        <div class="col-12 mb-3">
                            <label class="form-label">Notes</label>
                            <textarea name="Description" class="form-control" rows="4">@Model.Notes</textarea>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times"></i> Cancel
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Save Changes
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-danger text-white border-0">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i> Confirm Delete
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <div class="text-center mb-3">
                    <i class="fas fa-door-open fa-4x text-danger mb-3"></i>
                </div>
                <p class="text-center mb-2">Are you sure you want to delete</p>
                <p class="text-center mb-3">
                    <strong class="fs-5">Room @Model.RoomNumber</strong>?
                </p>
                <div class="alert alert-warning mb-0">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <small><strong>Warning:</strong> This action cannot be undone!</small>
                </div>
            </div>
            <div class="modal-footer border-0 bg-light">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cancel
                </button>
                <form asp-action="DeleteRoom" asp-route-id="@Model.Id" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash"></i> Delete Room
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusColor(RoomStatus status)
    {
        return status switch
        {
            RoomStatus.Available => "success",
            RoomStatus.Occupied => "danger",
            RoomStatus.Maintenance => "warning",
            RoomStatus.Cleaning => "info",
            RoomStatus.Reserved => "primary",
            _ => "secondary"
        };
    }

    string GetStatusDisplay(RoomStatus status)
    {
        return status switch
        {
            RoomStatus.Available => "Available",
            RoomStatus.Occupied => "Occupied",
            RoomStatus.Maintenance => "Maintenance",
            RoomStatus.Cleaning => "Cleaning",
            RoomStatus.Reserved => "Reserved",
            _ => "Unknown"
        };
    }
}

<style>
    .room-icon-large {
        animation: pulse 2s ease-in-out infinite;
    }

    @@keyframes pulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.05); }
    }
    
    .amenity-item {
        padding: 1rem;
        background: #f8f9fa;
        border-radius: 8px;
        transition: all 0.3s;
    }

    .amenity-item:hover {
        background: #e9ecef;
        transform: translateX(5px);
    }
    
    .card {
        transition: transform 0.2s, box-shadow 0.2s;
    }

    .card:hover {
        transform: translateY(-2px);
    }
    
    .border-4 {
        border-width: 4px !important;
    }
    
    .badge {
        font-weight: 500;
    }
</style>


@section Scripts {
<script>
    setTimeout(function() {
        const alerts = document.querySelectorAll('.alert');
        alerts.forEach(alert => {
            const bsAlert = new bootstrap.Alert(alert);
            bsAlert.close();
        });
    }, 5000);
    
    document.querySelectorAll('form').forEach(form => {
        form.addEventListener('submit', function() {
            const submitBtn = this.querySelector('button[type="submit"]');
            if (submitBtn) {
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';
            }
        });
    });
</script>
}