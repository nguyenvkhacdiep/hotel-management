@using HotelManagement.Models.Common
@model HotelManagement.Services.Common.PageList<HotelManagement.Services.Dto.InvoiceResponseModel>

@{
    ViewData["Title"] = "Invoices";
}

@{
    var queryParams = ViewBag.QueryParams as QueryParameters ?? QueryParameters.FromRequest(Context.Request);
    var filters = null as List<FilterConfig>;
}

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="mb-1">Invoice Management</h2>
                    <p class="text-muted mb-0">Track and manage all booking invoices</p>
                </div>
            </div>
        </div>
    </div>
    
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    
    <div class="card">
        <div class="card-body">
            @if (Model.Data.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle" id="invoicesTable">
                        <thead class="table-light">
                        <tr>
                            <th>Invoice ID</th>
                            <th>Customer</th>
                            <th>Room</th>
                            <th>Created Date</th>
                            <th>Amount</th>
                            <th>Payment Method</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var invoice in Model.Data)
                        {
                            <tr>
                                <td>
                                    <div>
                                        <strong>#@invoice.Id.ToString().Substring(0, 8).ToUpper()</strong>
                                        <br>
                                        <small class="text-muted">@invoice.Id.ToString().Substring(0, 13)...</small>
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <i class="bi bi-person-circle text-primary me-2 fs-5"></i>
                                        <strong>@invoice.CustomerName</strong>
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <i class="bi bi-door-open text-success me-2 fs-5"></i>
                                        <strong>Room @invoice.RoomNumber</strong>
                                    </div>
                                </td>
                                <td>
                                    <div>
                                        <i class="bi bi-calendar3 text-muted me-1"></i>
                                        @invoice.CreatedAt.ToString("MMM dd, yyyy")
                                        <br>
                                        <small class="text-muted">@invoice.CreatedAt.ToString("hh:mm tt")</small>
                                    </div>
                                </td>
                                <td>
                                    <strong class="text-primary fs-5">$@invoice.Total.ToString("N2")</strong>
                                </td>
                                <td>
                                    @switch (invoice.PaymentMethod)
                                    {
                                        case PaymentMethod.Cash:
                                            <span class="badge bg-success">
                                                <i class="bi bi-cash me-1"></i>Cash
                                            </span>
                                            break;
                                        case PaymentMethod.Card:
                                            <span class="badge bg-primary">
                                                <i class="bi bi-credit-card me-1"></i>Card
                                            </span>
                                            break;
                                        case PaymentMethod.BankTransfer:
                                            <span class="badge bg-info">
                                                <i class="bi bi-bank me-1"></i>Bank Transfer
                                            </span>
                                            break;
                                    }
                                </td>
                                <td>
                                    @switch (invoice.PaymentStatus)
                                    {
                                        case PaymentStatus.Pending:
                                            <span class="badge bg-warning text-dark">
                                                <i class="bi bi-clock me-1"></i>Pending
                                            </span>
                                            break;
                                        case PaymentStatus.Paid:
                                            <span class="badge bg-success">
                                                <i class="bi bi-check-circle me-1"></i>Paid
                                            </span>
                                            break;
                                        case PaymentStatus.Failed:
                                            <span class="badge bg-danger">
                                                <i class="bi bi-x-circle me-1"></i>Failed
                                            </span>
                                            break;
                                        case PaymentStatus.Refunded:
                                            <span class="badge bg-secondary">
                                                <i class="bi bi-arrow-counterclockwise me-1"></i>Refunded
                                            </span>
                                            break;
                                    }
                                </td>
                                <td>
                                    <div class="btn-group btn-group-sm" role="group">
                                        <a href="@Url.Action("Details", "Invoice", new { id = invoice.Id })" 
                                           class="btn btn-outline-primary" 
                                           title="View Details">
                                            <i class="fa fa-eye"></i>
                                        </a>
                                        @if (invoice.PaymentStatus == PaymentStatus.Pending)
                                        {
                                            <form asp-action="ChangeInvoicePaidStatus" asp-route-id="@invoice.Id" method="post" class="">
                                                <button type="submit"
                                                        class="btn btn-outline-success"
                                                        title="Mark as Paid">
                                                    <i class="fa fa-check-circle"></i>
                                                </button>
                                            </form>
                                        }
                                        <button type="button" 
                                                class="btn btn-outline-danger" 
                                                data-floor-id="@invoice.Id"
                                                onclick="confirmDelete(this)"
                                                title="Delete">
                                            <i class="fa fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                    @if (Model != null && Model.TotalPages > 1)
                    {
                        @await Component.InvokeAsync("Pagination", new { 
                            pageList = Model, 
                            queryParams = queryParams,
                            actionName = "ListRoomPrice"
                        })
                    }
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-receipt display-1 text-muted"></i>
                    <h4 class="mt-3 text-muted">No invoices found</h4>
                    <p class="text-muted">Try adjusting your filters or create a new invoice</p>
                </div>
            }
        </div>
    </div>
    
    @if (Model.Data.Any())
    {
        <div class="row mt-4">
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h6 class="card-title mb-3">
                            <i class="bi bi-cash text-success me-2"></i>Cash Payments
                        </h6>
                        <div class="d-flex justify-content-between">
                            <span>@Model.Data.Count(i => i.PaymentMethod == PaymentMethod.Cash) invoices</span>
                            <strong class="text-success">$@Model.Data.Where(i => i.PaymentMethod == PaymentMethod.Cash).Sum(i => i.Total).ToString("N2")</strong>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h6 class="card-title mb-3">
                            <i class="bi bi-credit-card text-primary me-2"></i>Card Payments
                        </h6>
                        <div class="d-flex justify-content-between">
                            <span>@Model.Data.Count(i => i.PaymentMethod == PaymentMethod.Card) invoices</span>
                            <strong class="text-primary">$@Model.Data.Where(i => i.PaymentMethod == PaymentMethod.Card).Sum(i => i.Total).ToString("N2")</strong>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h6 class="card-title mb-3">
                            <i class="bi bi-bank text-info me-2"></i>Bank Transfers
                        </h6>
                        <div class="d-flex justify-content-between">
                            <span>@Model.Data.Count(i => i.PaymentMethod == PaymentMethod.BankTransfer) invoices</span>
                            <strong class="text-info">$@Model.Data.Where(i => i.PaymentMethod == PaymentMethod.BankTransfer).Sum(i => i.Total).ToString("N2")</strong>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-danger text-white border-0">
                <h5 class="modal-title">
                    <i class="fas fa-exclamation-triangle me-2"></i> Confirm Delete
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body p-4">
                <div class="text-center mb-3">
                    <i class="fas fa-building fa-4x text-danger mb-3"></i>
                </div>
                <p class="text-center mb-2">Are you sure you want to delete this record?</p>
                <div class="alert alert-warning mb-0">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <small><strong>Warning:</strong> This action cannot be undone!</small>
                </div>
            </div>
            <div class="modal-footer border-0 bg-light">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cancel
                </button>
                <form id="deleteForm" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash"></i> Delete
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete(button) {
            const floorId = button.getAttribute('data-floor-id');

            document.getElementById('deleteForm').action = 'delete-invoice/' + floorId;

            var modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }

        setTimeout(function() {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);
    </script>
}

<style>
    .table th {
        font-weight: 600;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .btn-group-sm > .btn {
        padding: 0.25rem 0.5rem;
    }
    
    .table > tbody > tr:hover {
        background-color: rgba(0, 123, 255, 0.05);
    }
    
    .card {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        transition: transform 0.2s;
    }
    
    .card:hover {
        transform: translateY(-2px);
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    }
</style>