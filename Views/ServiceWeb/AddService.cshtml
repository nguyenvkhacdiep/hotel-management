@model HotelManagement.Services.Dto.AddServiceDto

@{
    ViewData["Title"] = "Add Service";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header pb-2">
                    <div class="d-flex align-items-center">
                        <h5 class="mb-0">Add New Service</h5>
                    </div>
                </div>
                <div class="card-body">
                    <form asp-action="AddService" method="post" id="bookingForm" novalidate>
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                        @if (TempData["SuccessMessage"] != null)
                        {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="bi bi-check-circle-fill"></i> @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                        }

                        @if (TempData["ErrorMessage"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                <i class="bi bi-exclamation-triangle-fill"></i> @TempData["ErrorMessage"]
                                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                            </div>
                        }
                        
                        <div class="mb-3">
                            <label asp-for="Name" class="form-label"><i class="bi bi-text-paragraph"></i> Name <span class="text-danger">*</span></label>
                            <input asp-for="Name" class="form-control" placeholder="Enter service name" required />
                            <span id="name-error" class="text-danger small"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="Price" class="form-label"><i class="bi bi-currency-dollar"></i> Price <span class="text-danger">*</span></label>
                            <input asp-for="Price" type="number" step="0.01" class="form-control" placeholder="Enter price" min="0" required />
                            <span id="price-error" class="text-danger small"></span>
                        </div>

                       
                        <div class="row mt-4">
                            <div class="col-md-12">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-save me-1"></i> Create Service
                                </button>
                                <a asp-action="ListService" class="btn btn-secondary">
                                    <i class="fas fa-times me-1"></i> Cancel
                                </a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');
            const nameInput = document.querySelector('input[name="Name"]');
            const nameError = document.getElementById('name-error');
            const priceInput = document.querySelector('input[id="Price"]');
            const priceError = document.getElementById('price-error');

            nameInput.addEventListener('input', function() {
                nameError.textContent = '';
                nameInput.classList.remove('is-invalid');
            });

            priceInput.addEventListener('input', function() {
                priceError.textContent = '';
                priceInput.classList.remove('is-invalid');
            });
            

            form.addEventListener('submit', function(e) {
                e.preventDefault();

                let hasError = false;

                if (!nameInput.value.trim()) {
                    nameError.textContent = 'Please enter name';
                    nameInput.classList.add('is-invalid');
                    hasError = true;
                }

                if (!priceInput.value.trim()) {
                    priceError.textContent = 'Please enter price';
                    priceInput.classList.add('is-invalid');
                    hasError = true;
                }

                if (!hasError) {
                    form.submit();
                }
            });
        });

        setTimeout(function() {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);
    </script>
}